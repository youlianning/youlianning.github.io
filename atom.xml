<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://youlianning.github.io</id>
    <title>远远的博客</title>
    <updated>2022-06-04T01:36:53.123Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://youlianning.github.io"/>
    <link rel="self" href="https://youlianning.github.io/atom.xml"/>
    <subtitle>星星之火，可以燎原</subtitle>
    <logo>https://youlianning.github.io/images/avatar.png</logo>
    <icon>https://youlianning.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 远远的博客</rights>
    <entry>
        <title type="html"><![CDATA[《如何学习》阅读笔记]]></title>
        <id>https://youlianning.github.io/post/lesslessru-he-xue-xi-greatergreater-yue-du-bi-ji/</id>
        <link href="https://youlianning.github.io/post/lesslessru-he-xue-xi-greatergreater-yue-du-bi-ji/">
        </link>
        <updated>2022-06-02T09:05:07.000Z</updated>
        <content type="html"><![CDATA[<p><strong>第一步：正确认识我们的大脑</strong></p>
<ol>
<li>
<p>大脑是个综合系统，有的地方负责加工，有的地方负责存储，没有细节会彻底丢失，只是每次提取的轨迹会有不同，内容也会被大脑自行加工一部分。我们的记忆会改变我们的记忆。</p>
</li>
<li>
<p>遗忘的作用是在大脑接受大量信息后主动对噪音进行第一次筛选，信息通过遗忘后再提取能增强记忆效果，遗忘能带来创新。</p>
</li>
<li>
<p>记忆应该分为两部分，存储能力和提取能力，存储能力不会变弱，需要锻炼提取能力。</p>
</li>
<li>
<p>我们在提取某项记忆的时候越是大费力气，那么在得到之后，该项记忆的提取能力以及储存能力就飙升得越高，也就是学得越扎实。</p>
</li>
</ol>
<p><strong>第二步：如何增强记忆</strong></p>
<ol>
<li>
<p><code>环境方面</code></p>
<p>学习的时候我们是什么感觉、在哪里学、在什么地方学等，以及人的情绪状况、专注程度、直觉感触等，都会对考试成绩产生影响。</p>
<blockquote>
<p>这一发现说明，大脑处于适度亢奋状态也好，非亢奋状态也罢，其储存进去的单词数量是大致相同的：总之都装进去了。但是，在后来提取记忆信息的时候，大脑一定以不同的方式重组了这些信息。那把大脑里面的“提取钥匙”需在大脑处于与之前的状态相同时才会显得最清晰，无论是嗑了药还是清醒着。不过，一旦考卷上直接标出了“类别”提示，那把钥匙就显得多余了，因为已经有一把“外来钥匙”放在了眼前。</p>
</blockquote>
<p>当我们提取记忆时，跟输入记忆时处于同样或者相似的环境，有助于我们提取记忆。但是这样的条件比较难达到。此时环境的作用，就相当于提示。内在提示和外在提示的确可以是相当有用的记忆提示，但在真正强有力的提醒面前，就都显得苍白无力了。</p>
<p>所以，解决的方案时更换学习环境，环境背景的变换能大大提高了记忆力。因为这意味着我们用多种环境路径存储同样的信息，增强了我们在不同条件下唤起记忆的能力。</p>
</li>
<li>
<p><code>化整为零</code></p>
<p>同样的重复次数，若恰当地分成几组、拉开时间距离来完成，要比集中起来一次完成的效果明显好很多。</p>
<table>
<thead>
<tr>
<th>待考时间</th>
<th>两次学习间隔时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>一星期</td>
<td>1~2天</td>
</tr>
<tr>
<td>1个月</td>
<td>1星期</td>
</tr>
<tr>
<td>3个月</td>
<td>2星期</td>
</tr>
<tr>
<td>6个月</td>
<td>3星期</td>
</tr>
<tr>
<td>1年</td>
<td>1个月</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><code>通过刺激来强化学习</code></p>
<p>主动的回想比被动的重复效果要更好。也就是说，以背诵为例，学到差不多的时候最好先放一放，然后尽量用心去回想刚才的内容，这样的学习效果比直接再看书要更好。如果你想背书，最快途径是这么做：先花1/3的时间去学去记，剩下的时间则要用来凭记忆背诵</p>
<p>考试的确是一个很有效的学习方法，还让我们看到，更有效果的做法是早早考试，而不是延后考试，“考试”会“污染”了“遗忘”。所以平时说把作业当考试是很有帮助的方法。</p>
<p>同时，跟直接学习相比，预考更容易把知识“赶进”脑子里去。这样可以强化自己对这一章节学习的侧重点。</p>
<p>对着自己也好，对着他人也罢，把你学过的东西表述出来，这种简单的做法并非仅是传统意义上的一种“自考”方式，它更是一种“学习”的方式，一种更高效的学习方式。</p>
</li>
</ol>
<p><strong>第三步：如何解决难题</strong></p>
<ol>
<li>
<p><code>留出孵化时间</code></p>
<p>先把难题放到一边的作用就是让你放下刚才自己已经想过的所有思路，让大脑里的意识不再指手画脚，从而给潜意识一个自己去琢磨的机会。在孵化期中，大脑对周围任何可能与解决问题相关联的信息都很敏感。我们过去的思路的限制导致我们面对许多问题时的觉察力大打折扣。此时可以休息，换个东西看看。过一会再回来。但是如果人并没有到真正黔驴技穷的地步就跑去休息，则不会得到任何好处。早早收工跑去打游戏的话，你只会得不偿失。</p>
</li>
<li>
<p><code>渗透，让大脑主动从环境中获取信息</code></p>
<p>第一种预设是，一旦着手某项工作之后，你就在心理上给那项工作添加了一个“要完成它”的砝码，哪怕根本就不是什么要紧的事情。第二种预设是，在你全神贯注于工作时，他人对你的打扰不但会延长这项工作在你记忆中驻留的时间，而且还会让你在心理上把这项工作提高到“需要先去完成”的首要位置上。实验结果表明，人的基本需求和动力会提高自身感知力对周围能满足这些需求的相关事物的敏感度。</p>
<p>渗滤的第一要素，就是一直被我们当作学习敌人的东西：打断。</p>
<p>一旦某个目标被“激活”，它便能盖过其他一切，调动起我们的感知、思维甚至是心态，去关注身边的一切。这便是渗滤的第二要素。</p>
<p>渗滤的第三个要素，就是有意识的反思。所谓渗滤，其关键就在于一直保持着心神的警觉，不断想办法调动起我们的头脑来，关注跟手中那份未完成项目相关联的一切，随时采集各种对外界的感知，并感悟自己内心的反思。</p>
</li>
<li>
<p><code>交叉学习，提高大脑灵活性</code></p>
<p>对单一而重复的集中训练的搅扰，使得受训者不得不一再做出调整，结果反而培养出了总体上的灵活应变能力，更由此提高了某项特定动作的准确度。从最浅层来看，在训练中系统地穿插些额外的，至少也是不同的活动或题材，看上去似乎是降低了学习成效，但实际上这样的交替训练却能培养出更扎实、水平更高的能力。学习时把不同的物件、技巧、概念等穿插到一起来练习，经过一段时间的积累之后，不但能使我们更清楚地了解每一项之间的不同之处，还能使我们更彻底地掌握好每一项内容。但最为困难的地方却在于我们不肯放弃对简单重复的固有信奉。他的学生们不需要记住更多的东西，他们的弱点在于不善于鉴别不同类型的问题，也不善于选择恰当的解题方案。那时他还没有听说过“交替学习”这一专业术语，但是把不同题型混合到一起听上去像是能解决这一弱点的正确方向。不过最关键的地方在于，你在设计自己的交替学习方案时，一定要把新的科目或技巧跟学过、练过，但已经有一段时间没有复习了的内容混合到一起。</p>
<p>学习本就应该是在不断的分心中进行的活动，不仅在学习过程中你的心神会不断跳跃，而且你学习的内容也应该多样化，这样你才能获得把新旧内容混合到一起学习的超值效果。</p>
</li>
</ol>
<p><strong>第四步：深入我们的潜意识</strong></p>
<ol>
<li>
<p><code>知觉学习，强化整体感</code></p>
<p>知觉学习并不是任信息自动注入的被动过程，而是有意吸纳信息的主动过程。这是一种更高层次的学习，能够让你超出细节本身，看到整体局势的内涵信息。知觉学习模块的目的在于提高判断的准确度和速度，也就是提高感知能力，让你只须扫上一眼就“知道”自己看到了什么，连解释都不需要，至少不是当下需要。常见的训练方法，你只管快速浏览一大堆的例子，其他的便交给你大脑的知觉区去处理就行了。</p>
</li>
<li>
<p><code>通过睡觉增强学习效果</code></p>
<p>最新研究表明，在失去意识的停机状态中，大脑实际上是在澄清记忆、深化技能——睡眠是完成这两项任务必不可少的步骤。换句话说，从本质上讲，睡觉就是学习。所以为了学习而去熬夜是得不偿失的。</p>
</li>
</ol>
<p>正确认识学习，<strong>学习，归根结底就是你做的每一件事。</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LaTex下载与安装]]></title>
        <id>https://youlianning.github.io/post/latex-xia-zai-yu-an-zhuang/</id>
        <link href="https://youlianning.github.io/post/latex-xia-zai-yu-an-zhuang/">
        </link>
        <updated>2022-04-18T06:18:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="下载">下载</h2>
<p>打开下载<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">清华源下载地址</a></p>
<p>选择<code>texlive.iso</code>并下载</p>
<h2 id="安装">安装</h2>
<p>下载好后，解压缩，安装，有人推荐建议安装在C盘，因为关于LaTex的很多插件会去默认的地址里找文件，但是由于我嫌弃它太大了，所以换了安装路径，各位请自便。</p>
<p>安装好后，打开vscode，安装<code>LaTeX Workshop</code>这个插件</p>
<p>打开vscode的setting.json文件，正确拷贝如下内容进行配置</p>
<pre><code class="language-json">    //latex配置[开始]
    &quot;latex-workshop.latex.tools&quot;: [
        {
            &quot;name&quot;: &quot;latexmk&quot;,
            &quot;command&quot;: &quot;latexmk&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;-pdf&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatex&quot;,
            &quot;command&quot;: &quot;xelatex&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatexArg&quot;,
            &quot;command&quot;: &quot;xelatex&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;-shell-escape&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;pdflatex&quot;,
            &quot;command&quot;: &quot;pdflatex&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;bibtex&quot;,
            &quot;command&quot;: &quot;bibtex&quot;,
            &quot;args&quot;: [
                &quot;%DOCFILE%&quot;
            ]
        }
    ],
    &quot;latex-workshop.latex.recipes&quot;: [
        {
            &quot;name&quot;: &quot;xelatex&quot;,
            &quot;tools&quot;: [
                &quot;xelatex&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatexWithArg&quot;,
            &quot;tools&quot;: [
                &quot;xelatexArg&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;latexmk&quot;,
            &quot;tools&quot;: [
                &quot;latexmk&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;,
            &quot;tools&quot;: [
                &quot;pdflatex&quot;,
                &quot;bibtex&quot;,
                &quot;pdflatex&quot;,
                &quot;pdflatex&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatex-&gt;bibtex-&gt;xelatex-&gt;xelatex&quot;,
            &quot;tools&quot;: [
                &quot;xelatex&quot;,
                &quot;bibtex&quot;,
                &quot;xelatex&quot;,
                &quot;xelatex&quot;,
            ]
        },
        {
            &quot;name&quot;: &quot;xelatexArg-&gt;bibtex-&gt;xelatexArg-&gt;xelatexArg&quot;,
            &quot;tools&quot;: [
                &quot;xelatexArg&quot;,
                &quot;bibtex&quot;,
                &quot;xelatexArg&quot;,
            ]
        }
    ],
    &quot;latex-workshop.view.pdf.viewer&quot;: &quot;browser&quot;,
    &quot;latex-workshop.latex.clean.fileTypes&quot;: [
        &quot;*.aux&quot;,
        &quot;*.bbl&quot;,
        &quot;*.blg&quot;,
        &quot;*.idx&quot;,
        &quot;*.ind&quot;,
        &quot;*.lof&quot;,
        &quot;*.lot&quot;,
        &quot;*.out&quot;,
        &quot;*.toc&quot;,
        &quot;*.acn&quot;,
        &quot;*.acr&quot;,
        &quot;*.alg&quot;,
        &quot;*.glg&quot;,
        &quot;*.glo&quot;,
        &quot;*.gls&quot;,
        &quot;*.ist&quot;,
        &quot;*.fls&quot;,
        &quot;*.log&quot;,
        &quot;*.fdb_latexmk&quot;
    ],
    //下面这段是语法检查模块
    //{
    &quot;ltex.enabled&quot;: true,
    &quot;[jsonc]&quot;: {
        &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot;
    },
    &quot;latex-workshop.latex.recipe.default&quot;: &quot;lastUsed&quot;,
    &quot;latex-workshop.view.outline.sections&quot;: [
        &quot;part&quot;,
        &quot;chapter&quot;,
        &quot;Csection&quot;,
        &quot;section&quot;,
        &quot;subsection&quot;,
        &quot;subsubsection&quot;,
        
    ],
    &quot;editor.wordWrap&quot;: &quot;on&quot;,
    &quot;workbench.editorAssociations&quot;: {
        &quot;*.ipynb&quot;: &quot;jupyter-notebook&quot;
    },
    &quot;latex-workshop.latex.autoBuild.run&quot;: &quot;never&quot;,
    &quot;editor.accessibilitySupport&quot;: &quot;off&quot;,
    &quot;pyqt-integration.qtdesigner.path&quot;: &quot;/Applications/Qt Designer.app/Contents/MacOS/Designer&quot;,
    &quot;editor.suggestSelection&quot;: &quot;first&quot;,
    &quot;vsintellicode.modify.editor.suggestSelection&quot;: &quot;automaticallyOverrodeDefaultValue&quot;,
    &quot;lsby_gitee_vscode_plugin.personal_access_tokens&quot;: &quot;096eca87ccee46e0c0cdcb826b816cb3&quot;,
    &quot;latex-workshop.intellisense.bibtexJSON.replace&quot;: {
    
    }
    //latex配置[结束]
</code></pre>
<p>然后就可以正常使用了，关于其它一些配置，可以参考如下链接：<a href="https://zhuanlan.zhihu.com/p/350249305">latex---vscode编辑器配置及快捷键</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LaTex基本语法（自用笔记）]]></title>
        <id>https://youlianning.github.io/post/latex-ji-ben-yu-fa-zi-yong-bi-ji/</id>
        <link href="https://youlianning.github.io/post/latex-ji-ben-yu-fa-zi-yong-bi-ji/">
        </link>
        <updated>2022-04-18T06:16:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="基本格式">基本格式</h2>
<pre><code class="language-latex">\documentclass[UTF8]{ctexart}
% 本行添加修饰用的其它包
\begin{document}
hello,world
\section{中英文内容}
Here is the English part.
\subsection{中文部分}
这里是中文。
\end{document}
</code></pre>
<h2 id="段落-换行-换页">段落、换行、换页</h2>
<pre><code class="language-latex">\section{中英文内容}
Here is the English part.
Here is the English part. % 一个回车是不是换段落

Here is the English part. % 两个回车是换段落
Here is the English part. \\ Here is the English part. % 双斜杠是换新行并置顶格

\newpage % 新建一页
</code></pre>
<h2 id="章节">章节</h2>
<p>在论文里往往需要小标题</p>
<pre><code class="language-latex">\tableofcontents % 自动生成目录，可能需要编译两次才能看见
\listoffigures % 自动生成图片目录
\listoftables % 自动生成表格目录

\section{一级标题}
\subsection{二级标题}
\subsubsection{三级标题}
\paragraph{四级标题} % 不推荐使用四级标题，它不会新生成段落，除非修改自定义

\section*{附录} % 不带序号的一级标题，但是无序号可能无法自动添加进目录
\addcontentsline{toc}{section}{附录} % 通过这种手动添加方式添加附录等

</code></pre>
<h2 id="有序列表和无序列表">有序列表和无序列表</h2>
<pre><code class="language-latex">% 有序列表
\begin{enumerate}
    \item aaa
    \item bbb
\end{enumerate}
% 无序列表
\begin{itemize}
    \item aaa
    \item bbb
\end{itemize}
</code></pre>
<h2 id="代码环境">代码环境</h2>
<pre><code class="language-latex">\section{中英文内容}
Here is the English \verb|Python| part. % 此处插入了代码或者等宽字体片段

% 插入一大段代码
% 如果想要优化代码展示，可以搜索资料，装饰它
\begin{verbatim}
	printf('hello world');
\end{verbatim}
</code></pre>
<h2 id="插图和表格">插图和表格</h2>
<pre><code class="language-latex">\documentclass[UTF8]{ctexart}
\usepackage{graphicx}
...
Here is the English \ref{img:lena}part. % 需要编译两次
\begin{figure}[]
    \centering
    \includegraphics[width=0.35\textwidth]{lena.png} % 文件路径名
    \caption{lena图像} % 图像名
    \label{img:lena} % 图像标签，img只是提醒自己，不是强制要求
\end{figure}

% 论文中尽量用矢量图，不要用位图
% xelatex支持pdf, eps两种矢量图
% word支持svg矢量图

% 表格演示，实际上表格可以不用手打，使用下列网页自动生成后复制粘贴
% https://www.tablesgenerator.com/

\begin{table}[]
\begin{tabular}{llll}
  &amp; 姓名 &amp; 成绩 &amp; 合格 \\
1 &amp; a  &amp; 90 &amp; 1  \\
2 &amp; b  &amp; 85 &amp; 1  \\
3 &amp; c  &amp; 55 &amp; 0 
\end{tabular}
\end{table}

</code></pre>
<h2 id="公式">公式</h2>
<pre><code class="language-latex">\section{中英文内容}
Here is the English $E=mc^2$ part. % 此处插入行内公式

Here is the English $$E=mc^2$$ part. % 如果使用两个$符号，则会新建行单独显示公式，但是不会给序号

% 插入一大段公式
% 如果想要更多公式用法，可以搜索资料
\begin{equation}
    E=mc^2
    \label{equ:1}
\end{equation}
</code></pre>
<h2 id="小工具">小工具</h2>
<pre><code class="language-latex">% 这个包能够自动为你生成一大段无意义文字，来帮助你检测当前格式排版
\usepackage{lipsum}

\lipsum
</code></pre>
<h2 id="自定义cls">自定义cls</h2>
<pre><code class="language-latex">\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{Book_Class}[2020/05/12]

\LoadClass[12pt]{report}

\RequirePackage{mathtools}
</code></pre>
<h2 id="语法备忘">语法备忘</h2>
<p>latex单反引号表示左双引号</p>
<h2 id="待补充">待补充</h2>
<ul>
<li>如何画矢量图</li>
<li>如何自动引用文献</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea扩展(一)- 代码高亮]]></title>
        <id>https://youlianning.github.io/post/gridea-kuo-zhan-yi-dai-ma-gao-liang/</id>
        <link href="https://youlianning.github.io/post/gridea-kuo-zhan-yi-dai-ma-gao-liang/">
        </link>
        <updated>2022-04-09T13:44:07.000Z</updated>
        <content type="html"><![CDATA[<p>参考链接：<a href="https://geraltxli.github.io/post/gridea-kuo-zhan/">Gridea扩展(一)- 代码高亮 | GeraltXLi</a></p>
<blockquote>
<p>没想到Gridea默认没有代码高亮，那只能自己来了，使用<strong>highlightjs</strong>，修改一下主题里代码， 引入一下就好了。</p>
</blockquote>
<h2 id="代码高亮">代码高亮</h2>
<ol>
<li>下载<a href="https://highlightjs.org/">highlight.js</a>，点<code>Get Version</code>去下载，里面也不少各种语言等之类的选择，一般默认就够用了</li>
<li>下载完后解压，简单点就把整个文件夹<code>highlight</code>都丢到gridea数据目录的<code>static</code>目录下（不过其实也可以直接copy里面的<code>highlight.pack.js</code>和<code>styles</code>目录）</li>
<li>去数据目录下的<code>themes</code>目录下修改，一般只有文章会用到，找到想要修改的主题，直接修改<code>post.ejs</code>。在head里加几行代码就行了，这里我选了<code>github-dark</code>样式，这个看自己爱好</li>
</ol>
<pre><code class="language-javascript">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;%= themeConfig.domain %&gt;/highlight/styles/github-dark.min.css&quot;&gt;
    &lt;script src=&quot;&lt;%= themeConfig.domain %&gt;/highlight/highlight.min.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
</code></pre>
<p><strong>注意：</strong> 下载下文件后，内部的文件名不一定对应的上，需要打开下载的文件，查看匹配修改一下名字，与js设置里的路径对应。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ FPGA Vitis：mipi摄像头图像VDMA传输DP口输出代码框架]]></title>
        <id>https://youlianning.github.io/post/fpga-vitismipi-she-xiang-tou-tu-xiang-vdma-chuan-shu-dp-kou-shu-chu-dai-ma-kuang-jia/</id>
        <link href="https://youlianning.github.io/post/fpga-vitismipi-she-xiang-tou-tu-xiang-vdma-chuan-shu-dp-kou-shu-chu-dai-ma-kuang-jia/">
        </link>
        <updated>2022-04-09T06:13:38.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-c">/* ------------------------------------------------------------ */
/*				Include File Definitions						*/
/* ------------------------------------------------------------ */

#include &quot;display_demo.h&quot;
#include &lt;stdio.h&gt;
#include &quot;math.h&quot;
#include &lt;ctype.h&gt;
#include &lt;stdlib.h&gt;
#include &quot;xil_types.h&quot;
#include &quot;xil_cache.h&quot;
#include &quot;xparameters.h&quot;
#include &quot;xiicps.h&quot;
#include &quot;vdma.h&quot;
#include &quot;i2c/PS_i2c.h&quot;
#include &quot;xgpiops.h&quot;
#include &quot;sleep.h&quot;
#include &quot;dp/dp.h&quot;
#include &quot;ov5640.h&quot;
#include &quot;config.h&quot;
#include &quot;demosaic.h&quot;
#include &quot;gamma_lut.h&quot;

#if P1080 == 1
#define HORSIZE 1920*4
#define VERSIZE 1080
#else
#define HORSIZE 1280*4
#define VERSIZE 720
#endif

#define CAM_EMIO	78
/* ------------------------------------------------------------ */
/*				Global Variables								*/
/* ------------------------------------------------------------ */

/*
 * Display Driver structs
 */

XIicPs ps_i2c0;
XGpioPs Gpio;

/*
 * Framebuffers for video data
 */
u8 frameBuf[DISPLAY_NUM_FRAMES][DEMO_MAX_FRAME] __attribute__ ((aligned(256)));//字节对齐，提高读取效率
u8 *pFrames[DISPLAY_NUM_FRAMES]; //array of pointers to the frame buffers

int PsGpioSetup() ;

int main(void)
{

	int Status;
	int i ;

    //直接将cache关闭，这时不使用cache，无论是CPU还是PL都是直接更新DDR中的数据，所以不存在Cache一致性的问题。
	Xil_DCacheDisable();
	Xil_ICacheDisable();


	/*
	 * Initialize an array of pointers to the 3 frame buffers
	 */
	for (i = 0; i &lt; DISPLAY_NUM_FRAMES; i++)
	{
		pFrames[i] = frameBuf[i];
        //C 库函数 void *memset(void *str, int c, size_t n) 
        //复制字符 c（一个无符号字符）到参数 str 所指向的字符串的前 n 个字符。
        //此处用于初始化分配到的空间
		memset(pFrames[i], 0, DEMO_MAX_FRAME);
	}
	
    //初始化CAMERA引脚
	PsGpioSetup() ;
	/*
	 * Reset sensor/复位CAMERA引脚
	 */
	XGpioPs_WritePin(&amp;Gpio, CAM_EMIO, 0) ;
	usleep(1000000);
	XGpioPs_WritePin(&amp;Gpio, CAM_EMIO, 1) ;
	usleep(1000000);

	i2c_init(&amp;ps_i2c0, XPAR_XIICPS_0_DEVICE_ID,100000);

	
	/*
	 * DP dma demo
	 */
	xil_printf(&quot;DPDMA Generic Video Example Test \r\n&quot;);
	Status = DpdmaVideoExample(&amp;RunCfg, pFrames[0]);
	if (Status != XST_SUCCESS) {
		xil_printf(&quot;DPDMA Video Example Test Failed\r\n&quot;);
		return XST_FAILURE;
	}

	gamma_lut_init();
	demosaic_init();

	/* Start Sensor Vdma */
	vdma_write_init(XPAR_AXIVDMA_0_DEVICE_ID,HORSIZE,VERSIZE,DEMO_STRIDE,(unsigned int)pFrames[0]);
	
	/*
	 * Initialize Sensor
	 */
	sensor_init(&amp;ps_i2c0);

	return 0;
}


int PsGpioSetup()
{
	XGpioPs_Config *GPIO_CONFIG ;
	int Status ;

	GPIO_CONFIG = XGpioPs_LookupConfig(XPAR_XGPIOPS_0_DEVICE_ID) ;

	Status = XGpioPs_CfgInitialize(&amp;Gpio, GPIO_CONFIG, GPIO_CONFIG-&gt;BaseAddr) ;
	if (Status != XST_SUCCESS)
	{
		return XST_FAILURE ;
	}
	/* set MIO 54 as output */
	XGpioPs_SetDirectionPin(&amp;Gpio, CAM_EMIO, 1) ;

	XGpioPs_SetOutputEnablePin(&amp;Gpio, CAM_EMIO, 1);


	return XST_SUCCESS ;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vivado HLS生成IP核报错的解决方案]]></title>
        <id>https://youlianning.github.io/post/vivado-hls-sheng-cheng-ip-he-bao-cuo-de-jie-jue-fang-an/</id>
        <link href="https://youlianning.github.io/post/vivado-hls-sheng-cheng-ip-he-bao-cuo-de-jie-jue-fang-an/">
        </link>
        <updated>2022-04-07T06:43:45.000Z</updated>
        <content type="html"><![CDATA[<p>参考链接：<a href="https://blog.csdn.net/qq_41873311/article/details/122596244">(79条消息) Vivado HLS生成IP核报错的解决方案_爱学习的诸葛铁锤的博客-CSDN博客_hls生成ip核</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[FPGA HLS开发：常见HLS接口综合]]></title>
        <id>https://youlianning.github.io/post/fpga-hls-kai-fa-chang-jian-hls-jie-kou-zong-he/</id>
        <link href="https://youlianning.github.io/post/fpga-hls-kai-fa-chang-jian-hls-jie-kou-zong-he/">
        </link>
        <updated>2022-04-07T06:42:27.000Z</updated>
        <content type="html"><![CDATA[<p><strong>HLS接口主要分为三类：</strong></p>
<ul>
<li>clock and reset interface</li>
<li>block level interface (主要综合对象)</li>
<li>port level interface (主要综合对象)</li>
</ul>
<h2 id="block-level-interface">Block Level Interface</h2>
<p><strong>主要分为三类：</strong></p>
<ul>
<li>ap_ctrl_none</li>
<li>ap_ctrl_hs</li>
<li>ap_ctrl_chain</li>
</ul>
<blockquote>
<p><strong>注释：</strong> “ap”的头是历史遗留问题，并没有什么具体的意思。Xilinx的HLS工具是2011年从一个叫AutoSEL的公司中购买的，而那个公司管这个工具叫做AutoPilot (ap)；不知道是什么原因这个东西就没改过，所以到现在HLS中重要的信号和datatype仍然以ap_前缀开头。</p>
<p>注释来源：<a href="https://zhuanlan.zhihu.com/p/97085167">Xilinx HLS中ap前缀的意义 - 知乎 (zhihu.com)</a></p>
</blockquote>
<ol>
<li><strong>ap_ctrl_none</strong>: 没有 Block Level interface</li>
<li><strong>ap_ctrl_hs</strong>:
<ul>
<li>ap_start: 捕捉到上升沿时hls的topfunction开始执行</li>
<li>ap_idle: 在 topfunction 开始执行之后处于低电平，执行完成之后处于高电平</li>
<li>ap_ready: 处于高电平时表示 topfunction 准备完毕，开始执行之后处于低电平</li>
<li>ap_done: 在 topfunction 执行完成之后处于高电平，当 ap_start 捕捉到上升沿之后重新处于低电平</li>
</ul>
</li>
<li><strong>ap_ctrl_chain</strong>: 比 ap_ctrl_hs 多一个 ap_continue 接口，如果在 topfunction 执行完成之后 ap_continue 处于低电平，此时 IP 核会终止运行，只有在 ap_continue 被置于高电平才会开始新 一轮运行。</li>
</ol>
<h2 id="port-level-interface">Port Level Interface</h2>
<p><strong>主要分为4类：</strong></p>
<ul>
<li>AXI4 Interface</li>
<li>No I/O Interface</li>
<li>wire handshake</li>
<li>memory Interface</li>
</ul>
<ol>
<li>
<p><strong>AXI4 Interface</strong>：</p>
<ol>
<li>
<p>axi：axi-stream 接口，包含 side-channel 和 without side-channel 两类，通常用于接外界连续输入的数据，比如我们想把若干组数据从 PS 端送入 PL 端，可以将 IP 核输入设置为 axi类型接口</p>
</li>
<li>
<p>m_axi：master 模式的 axi-full 接口，HLS 作为主模式，从 PS 端读写数据，多用于将数据通过AXI-HP接口送入PS端，与DDR通信</p>
<p><strong>注意：</strong> 如果将接口设置为 m_axi 模式会涉及到一个读写延时的问题，整体大概在 30cycles 左右， 涉及到一个叫 burst transfer 的优化，用合适的读写 DDR 的方法可以在一定程度上提升数据处理 的整体速度</p>
</li>
<li>
<p>s_axilite: axi-lite 接口，属于轻量级的 axi 接口，通常用于和 PS 端 CPU 数据交互，多和 AXI-GP 接口相连，用于送入 CPU 提供的配置信息或向 CPU 写入配置信息。</p>
</li>
</ol>
</li>
<li>
<p><strong>NO I/O Interface</strong>：</p>
<ol>
<li>ap_none: 多接单个数据，没有任何相关联的其他信号，属于默认参数接口。</li>
<li>ap_stable: 用于配置输入参数，参数配置通常是只在复位状态下才会发生变化，用的不多</li>
</ol>
</li>
<li>
<p><strong>wire handshake</strong>:</p>
<ol>
<li>ap_vld: 输入信号，通常接单个数据，包含有效信号和输入信号</li>
<li>ap_ovld:输出信号，通常接单个数据，包含有效信号和输出信号</li>
<li>ap_ack:只包含有效信号，不包含数据，基本不用</li>
</ol>
</li>
<li>
<p><strong>Memory Interf</strong>:</p>
<ol>
<li>ap_bram:当输入数据类型是数组时使用这种类型接口，可以直接和 Bram 相连</li>
<li>ap_memory:功能和 ap_bram 相同，只是 ap_bram 在综合时会把有关信号打包在一起,ap_memory 会综 合成多个零散的接口</li>
<li>ap_fifo:输入数据类型是数组时使用这种类型接口，用于和 fifo 直接相连</li>
</ol>
</li>
</ol>
<h2 id="hls常用优化">HLS常用优化</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[图像处理：白平衡原理与应用]]></title>
        <id>https://youlianning.github.io/post/tu-xiang-chu-li-bai-ping-heng-yuan-li-yu-ying-yong/</id>
        <link href="https://youlianning.github.io/post/tu-xiang-chu-li-bai-ping-heng-yuan-li-yu-ying-yong/">
        </link>
        <updated>2022-04-06T08:23:32.000Z</updated>
        <content type="html"><![CDATA[<p>ITU在BT.601中规定，wr=0.299，wb=0.114，wg=1-wb-wr=0.587。</p>
<p>所以可得变换矩阵</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">(</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold-italic">Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mi>b</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mi>r</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.299</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.587</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.114</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>0.169</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>0.331</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.500</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.500</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>0.419</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>0.081</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>⋅</mo><mrow><mo fence="true">(</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\left(\begin{array}{l}
\boldsymbol{Y} \\
C_{b} \\
C_{r}
\end{array}\right)=\left(\begin{array}{rrr}
0.299 &amp; 0.587 &amp; 0.114 \\
-0.169 &amp; -0.331 &amp; 0.500 \\
0.500 &amp; -0.419 &amp; -0.081
\end{array}\right) \cdot\left(\begin{array}{l}
R \\
G \\
B
\end{array}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">Y</span></span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">9</span><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">6</span><span class="mord">9</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">8</span><span class="mord">7</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">3</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">4</span><span class="mord">1</span><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">8</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">(</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>=</mo><mrow><mo fence="true">(</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1.000</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.000</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1.403</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1.000</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>0.344</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>0.714</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1.000</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1.773</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.000</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mo>⋅</mo><mrow><mo fence="true">(</mo><mtable><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mi>b</mi></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>C</mi><mi>r</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">\left(\begin{array}{l}
R \\
G \\
B
\end{array}\right)=\left(\begin{array}{rrr}
1.000 &amp; 0.000 &amp; 1.403 \\
1.000 &amp; -0.344 &amp; -0.714 \\
1.000 &amp; 1.773 &amp; 0.000
\end{array}\right) \cdot\left(\begin{array}{l}
Y \\
C_{b} \\
C_{r}
\end{array}\right)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">3</span><span class="mord">4</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">7</span><span class="mord">7</span><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord">.</span><span class="mord">4</span><span class="mord">0</span><span class="mord">3</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">1</span><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>由于计算过程中可能出现负数，所以需要进行取绝对值<br>
Y = 0.299 R + 0.587 G + 0.114 B<br>
Cb = -0.1687 R - 0.3313 G + 0.5 B + 128<br>
Cr = 0.5 R - 0.4187 G - 0.0813 B + 128<br>
R = Y + 1.402 (Cr-128)<br>
G= Y - 0.34414 (Cb-128) - 0.71414 (Cr-128)<br>
B= Y + 1.772 (Cb-128)</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[FPGA Vitis开发：DMA驱动案例]]></title>
        <id>https://youlianning.github.io/post/fpga-vitis-kai-fa-dma-qu-dong-an-li/</id>
        <link href="https://youlianning.github.io/post/fpga-vitis-kai-fa-dma-qu-dong-an-li/">
        </link>
        <updated>2022-04-05T11:24:48.000Z</updated>
        <content type="html"><![CDATA[<p><strong>配置思路：</strong></p>
<ol>
<li>定义设备ID，发送和接收数据数组</li>
<li>定义中断处理函数</li>
<li>dma配制</li>
<li>清除cache</li>
<li>dma传输数据</li>
<li>清除cache</li>
<li>处理数据</li>
</ol>
<p><strong>初始数据定义</strong></p>
<pre><code class="language-C">#include &quot;xaxidma.h&quot;	//dma
#include &quot;xparameters.h&quot;//设备
#include &quot;xscugic.h&quot;	//中断
#include &quot;xil_printf.h&quot;	//串口

#define DMA_DEV_ID 		XPAR_AXIDMA_0_DEVICE_ID						//DMA设备ID
#define INT_DEVICE_ID 	XPAR_SCUGIC_SINGLE_DEVICE_ID				//中断设备ID
#define INTR_S2MM_ID	XPAR_FABRIC_AXIDMA_0_S2MM_INTROUT_VEC_ID	//DMA接收中断ID

#define FIFO_DATABYTE 	4							//FIFO内单个数据4字节
#define TEST_COUNT 		80							//测试数据列长80个数据
#define MAX_PKT_LEN 	TEST_COUNT*FIFO_DATABYTE	//分配地址长度

#define TEST_START_VALUE	0xc						//初始测试数据

#define NUMBER_OF_TRANSFERS	2						//测试次数

int XAxiDma_Setup(u16 DeviceId);					//DMA配置函数
static int CheckData(void);							//中断处理函数
int SetInterruptInit(XScuGic *InstancePtr, u16 IntrID, XAxiDma *XAxiDmaPtr);	//中断配置函数

XScuGic INST;	//中断控制器实例
XAxiDma AxiDma;	//XAxiDma 实例

u8 TxBufferPtr[MAX_PKT_LEN];	//发送数据列
u8 RxBufferPtr[MAX_PKT_LEN];	//接收数据列
</code></pre>
<p><strong>主程序</strong></p>
<pre><code class="language-c">int main()
{
	int Status;
	xil_printf(&quot;\r\n--- Entering main() --- \r\n&quot;);

	Status=XAxiDma_Setup(DMA_DEV_ID);
	if(Status!=XST_SUCCESS){
		xil_printf(&quot;XAxiDma Test Failed\r\n&quot;);
		return XST_FAILURE;
	}

	xil_printf(&quot;Successfully Ran XAxiDma Test\r\n&quot;);
	xil_printf(&quot;---Exiting main()---\r\n&quot;);
	return XST_SUCCESS;
}
</code></pre>
<p><strong>中断配置函数</strong></p>
<pre><code class="language-c">int SetInterruptInit(XScuGic *InstancePtr, u16 IntrID, XAxiDma *XAxiDmaPtr)
{

	XScuGic_Config * Config ;
	int Status ;

	//初始化中断控制器驱动
	Config = XScuGic_LookupConfig(INT_DEVICE_ID) ;
	Status = XScuGic_CfgInitialize(&amp;INST, Config, Config-&gt;CpuBaseAddress) ;
	if (Status != XST_SUCCESS)
		return XST_FAILURE ;


	//设置中断优先级和触发类型
	//XScuGic_SetPriorityTriggerType(int_ins_ptr, tx_intr_id,0xa0,0x3);
	//XScuGic_SetPriorityTriggerType(int_ins_ptr,rx_intr_id,0xA0,0x3);

	//为中断设置中断处理函数
	Status = XScuGic_Connect(InstancePtr, IntrID,
			(Xil_ExceptionHandler)CheckData,	//此处写入中断处理函数
			XAxiDmaPtr) ;
	if (Status != XST_SUCCESS) {
			return Status;
		}

	//使能中断
	XScuGic_Enable(InstancePtr, IntrID) ;

	//启用来自硬件的中断
	Xil_ExceptionInit();
	Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT,(Xil_ExceptionHandler) XScuGic_InterruptHandler,InstancePtr);
	Xil_ExceptionEnable();

	return XST_SUCCESS ;

}
</code></pre>
<p><strong>DMA配置函数</strong></p>
<pre><code class="language-c">int XAxiDma_Setup(u16 DeviceId)
{
	XAxiDma_Config *CfgPtr;
	int Status;
	int Tries = NUMBER_OF_TRANSFERS;
	int Index;
	u8 Value;

	//查找DMA硬件配置信息
	CfgPtr = XAxiDma_LookupConfig(DeviceId);
	if (!CfgPtr) {
		xil_printf(&quot;No config found for %d\r\n&quot;, DeviceId);
		return XST_FAILURE;
	}

	//初始化DMA引擎
	Status = XAxiDma_CfgInitialize(&amp;AxiDma, CfgPtr);
	if (Status != XST_SUCCESS) {
		xil_printf(&quot;Initialization failed %d\r\n&quot;, Status);
		return XST_FAILURE;
	}

	//判断有无使能sg模式，如果使能则返回错误
	if(XAxiDma_HasSg(&amp;AxiDma)){
		xil_printf(&quot;Device configured as SG mode \r\n&quot;);
		return XST_FAILURE;
	}

	//中断函数初始化
	Status = SetInterruptInit(&amp;INST,INTR_S2MM_ID, &amp;AxiDma) ;
	if (Status != XST_SUCCESS)
		         return XST_FAILURE ;

	/* Disable MM2S interrupt, Enable S2MM interrupt */
	//使能中断
	//当DMA向DDR写完数据后，发送中断
	XAxiDma_IntrEnable(&amp;AxiDma, XAXIDMA_IRQ_IOC_MASK,
						XAXIDMA_DEVICE_TO_DMA);
	XAxiDma_IntrDisable(&amp;AxiDma, XAXIDMA_IRQ_ALL_MASK,
						XAXIDMA_DMA_TO_DEVICE);

	//初始化发送数据数组
	Value = TEST_START_VALUE;
	for(Index = 0; Index &lt; MAX_PKT_LEN; Index ++) {
			TxBufferPtr[Index] = Value;

			Value = (Value + 1) &amp; 0xFF;
	}
	/* Flush the SrcBuffer before the DMA transfer, in case the Data Cache is enabled*/
	//在发送数据前把cache里的数据写入到DDR中
	/*由于DMA需要访问DDR3，而CPU与DDR3之间是通过Cache交互的，数据暂存在Cache里，
	可能没有真正刷新到DDR3，如果外部设备也就是DMA想要读取
	DDR3的值，必须将Cache里的数据刷新到DDR3中，这样DMA才能读到正确的值。调用
	Xil_DCacheFlushRange函数，需要给出内存地址和长度。 */
	Xil_DCacheFlushRange((UINTPTR)TxBufferPtr, MAX_PKT_LEN);
	Xil_DCacheFlushRange((UINTPTR)RxBufferPtr, MAX_PKT_LEN);

	for(Index = 0; Index &lt; Tries; Index ++) {
			Status = XAxiDma_SimpleTransfer(&amp;AxiDma,(UINTPTR) TxBufferPtr,MAX_PKT_LEN, XAXIDMA_DMA_TO_DEVICE);
			if (Status != XST_SUCCESS) {
				return XST_FAILURE;
			}

			//虽然看起来读和写都同时打开，但由于stream流的协议，会等待FIFO里有数据才开始传输
		    Status = XAxiDma_SimpleTransfer(&amp;AxiDma,(UINTPTR) RxBufferPtr,MAX_PKT_LEN, XAXIDMA_DEVICE_TO_DMA);
			if (Status != XST_SUCCESS) {
				return XST_FAILURE;
			}

			//确保cache写入到DDR当中
			while ((XAxiDma_Busy(&amp;AxiDma,XAXIDMA_DEVICE_TO_DMA)) ||
				(XAxiDma_Busy(&amp;AxiDma,XAXIDMA_DMA_TO_DEVICE)))
					{
					/* Wait */
			}

		}

		/* Test finishes successfully
		 */
		return XST_SUCCESS;
}
</code></pre>
<p><strong>中断处理函数</strong></p>
<pre><code class="language-c">static int CheckData(void)
{
	u8 *RxPacket;
	int Index = 0;
	u8 Value;

	RxPacket = RxBufferPtr;
	Value = TEST_START_VALUE;

	xil_printf(&quot;Enter Interrupt\r\n&quot;);
	/*清除中断标志位*/
	XAxiDma_IntrAckIrq(&amp;AxiDma, XAXIDMA_IRQ_IOC_MASK,XAXIDMA_DEVICE_TO_DMA) ;
	/* Invalidate the DestBuffer before receiving the data, in case the Data Cache is enabled*/
	/*在中断服务程序中，首先清除中断，由于 DDR3 中的数据已经更新，但 Cache 中的数据并
	没有更新，CPU 如果想从 DDR3 中读取数据，需要调用 Xil_DCacheInvalidateRang 函数，将
	Cache 数据作废，这样 CPU 就能从 DDR3 中读取正确的数据。同样也要给出内存地址和长
	度。*/
	Xil_DCacheInvalidateRange((UINTPTR)RxPacket, MAX_PKT_LEN);
	//数据比对
	for(Index = 0; Index &lt; MAX_PKT_LEN; Index++) {
		if (RxPacket[Index] != Value) {
			xil_printf(&quot;Data error %d: %x/%x\r\n&quot;,
			Index, (unsigned int)RxPacket[Index],
				(unsigned int)Value);

			return XST_FAILURE;
		}
		Value = (Value + 1) &amp; 0xFF;
	}
	return XST_SUCCESS;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[FPGA Verilog语法：generate的用法]]></title>
        <id>https://youlianning.github.io/post/fpga-verilog-yu-fa-generate-de-yong-fa/</id>
        <link href="https://youlianning.github.io/post/fpga-verilog-yu-fa-generate-de-yong-fa/">
        </link>
        <updated>2022-04-05T05:28:12.000Z</updated>
        <content type="html"><![CDATA[<p>本文转载自：<a href="https://blog.51cto.com/lihaichuan/1118866">verilog中generate语句的用法_李海川的技术博客_51CTO博客</a></p>
<p>**作用：**生成语句可以动态地生成verilog代码，当对矢量中的多个位进行 重复操作 时，或者当进行多个模块的实例引用的重复操作时，或者根据参数的定义来确定程序中是否应该包含某段Verilog代码的时候，使用生成语句能大大简化程序的编写过程。</p>
<p>生成语句生成的实例范围，关键字generate-endgenerate用来指定该范围。生成实例可以是以下的一个或多个类型：</p>
<table>
<thead>
<tr>
<th>（1）模块</th>
<th>（2）用户定义原语</th>
<th>（3）门级语句</th>
<th>（4）连续赋值语句</th>
<th>（5）initial和always块</th>
</tr>
</thead>
</table>
<p>​    generate语句有【generate-for】，【generate-if】，【generate-case】三种语句。</p>
<blockquote>
<p>generate-for语句</p>
<p>（1) 必须有genvar关键字定义for语句的变量。</p>
<p>（2）for语句的内容必须加begin和end（即使就一句）。</p>
<p>（3）for语句必须有个名字。</p>
</blockquote>
<pre><code class="language-verilog">//例1：组合逻辑实现
module test(bin,gray);

    parameter SIZE=8;

    output [SIZE-1:0] bin;

    input [SIZE-1:0] gray;

    genvar i; //genvar i;也可以定义到generate语句里面

    generate

       for(i=0;i&lt;SIZE;i=i+1)

       begin:bit

           assign bin[i]=^gray[SIZE-1:i];

       end

    endgenerate

endmodule   

//等同于下面语句

assign bin[0]=^gray[SIZE-1:0];

assign bin[1]=^gray[SIZE-1:1];

assign bin[2]=^gray[SIZE-1:2];

assign bin[3]=^gray[SIZE-1:3];

assign bin[4]=^gray[SIZE-1:4];

assign bin[5]=^gray[SIZE-1:5];

assign bin[6]=^gray[SIZE-1:6];

assign bin[7]=^gray[SIZE-1:7];
</code></pre>
<pre><code class="language-verilog">//例2:时序逻辑实现

generate

    genvar i;

    for(i=0;i&lt;SIZE;i=i+1)

    begin:shifter

       always@(posedge clk)

           shifter[i]&lt;=(i==0)?din:shifter[i-1];

    end

endgenerate

//等同于下面语句

always@(posedge clk)

    shifter[0]&lt;=din;

always@(posedge clk)

    shifter[1]&lt;=shifter[0];

always@(posedge clk)

    shifter[2]&lt;=shifter[1];

.................

    ......................

always@(posedge clk)

    shifter[SIZE]&lt;=shifter[SIZE-1];

//generate-if，generate-case和generate-for语句类似。
</code></pre>
]]></content>
    </entry>
</feed>