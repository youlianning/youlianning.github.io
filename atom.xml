<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://youlianning.github.io</id>
    <title>远远的博客</title>
    <updated>2022-09-07T13:20:39.593Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://youlianning.github.io"/>
    <link rel="self" href="https://youlianning.github.io/atom.xml"/>
    <subtitle>星星之火，可以燎原</subtitle>
    <logo>https://youlianning.github.io/images/avatar.png</logo>
    <icon>https://youlianning.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, 远远的博客</rights>
    <entry>
        <title type="html"><![CDATA[《如何成为不完美主义者》阅读笔记]]></title>
        <id>https://youlianning.github.io/post/lesslessru-he-cheng-wei-bu-wan-mei-zhu-yi-zhe-greatergreater-yue-du-bi-ji/</id>
        <link href="https://youlianning.github.io/post/lesslessru-he-cheng-wei-bu-wan-mei-zhu-yi-zhe-greatergreater-yue-du-bi-ji/">
        </link>
        <updated>2022-08-27T02:54:48.000Z</updated>
        <summary type="html"><![CDATA[<p>全书共阅读三天，用时4小时😄</p>
]]></summary>
        <content type="html"><![CDATA[<p>全书共阅读三天，用时4小时😄</p>
<!-- more -->
<h2 id="第一章-启发案例">第一章 启发案例</h2>
<p>有一天，我去蔬果店买菜，它旁边就是我平常锻炼的健身房。我本来可以顺便做个运动，但面对着两个问题：一，我没有穿运动服，穿普通衣服锻炼肯定会让我不太舒服——不管是对我的身体还是对他人的观感而言；二，我有一根手指骨折了，尚未痊愈，要是我坚持像平常一样举杠铃，那根骨折的手指无疑会给我的运动造成巨大障碍。这些都成了我那一天不做运动的好借口。</p>
<p>换作以前，这无疑又会成为我“下次再说”的经典案例，但我已经不一样了。我意识到当下自己的情况确实不适合做运动，但我也认为运动不需要分时间和场合。就这样，我坚持完成了一次不完美的健身活动，锻炼了肺活量、肱三头肌屈伸，做了一些绳索飞鸟。正因为我接受了这次不完美的锻炼，我才获得了一次条件不够完美，质量却很高的运动效果（特别是我的肺部得到了锻炼）。</p>
<p>我内心深处那个完美主义者看到的是不去健身的两个强有力的理由，而那个不完美主义者看到的却是取得哪怕些许进步的机会，于是我选择行动起来。有些人始终意识不到，其实构成我们人生的就是这些小决定，我们之所以认为“我要减肥”“我要写一本书”这样的大决定更重要，是因为这些目标一旦实现，确实意义非凡。但回首过往，你会发现你错过了多少微小的时刻，如果当时你有所作为，把它们统统利用起来，你早已成为某个领域的专家了。没错，正是这些日常的小决定（和小放弃）最终左右了我们人生的大走向。</p>
<h2 id="第二章-完美主义者的思维方式">第二章 完美主义者的思维方式</h2>
<ol>
<li>如果你不能重新定义完美主义，无法认清它是一种有杀伤力的消极心态，那么你对其优越感的错觉必将阻碍你做出任何形式的积极改变。</li>
<li>认识汽车，并不意味着你能造出一辆；同理，仅仅在表面上了解完美主义，也并不意味着你明白如何控制它。</li>
<li>三种完美主义标准：
<ol>
<li>完美情境：地点，时段，资源</li>
<li>完美质量</li>
<li>完美数量</li>
</ol>
</li>
<li>完美主义者无法接受微小的价值或进步；他们只看重宏大、顺利、完美的成功。</li>
<li>完美主义的根源：
<ol>
<li>缺乏安全感</li>
<li>自卑情结：不尝试，就不会犯错，就不会羞耻</li>
<li>对现状的不满</li>
<li>学校教育的消极影响：学校教育我们，只要付出最大程度的努力，就会取得优异的成绩；然而，人生告诉我们，最大程度的努力只是让取得优异成绩成为可能而已。</li>
</ol>
</li>
<li>完美主义的一个共同影响就是让我们对不确定的事物产生了恐惧。</li>
<li>完美主义是一台制造借口的机器，只要建立了完美的标准，实现与否似乎就变得不再重要。你还可以用这些标准来应对内心深处的恐惧和迟疑。</li>
<li>完美主义者喜欢远离恐惧的事物时获得的所谓安全感，这种完全不用付出努力追求卓越的心态也就成了人们成为完美主义者最主要的原因。</li>
<li>如果说完美主义是一座冰山，海面上露出的那个尖顶就是对完美的渴望，而海面下那占据了冰山90%的主体则是对失败的恐惧。虽然我们不愿将后者示人，但它确实在左右我们的行为。</li>
<li>我们之所以抱着完美主义不放，不是因为失败的成本增加了，而是因为回报的重要性提升了。</li>
<li>有些东西，我们越想得到，就越害怕得不到，那些会导致我们以完美主义为借口不去实施的低风险、高回报的行为就是“完美”的例子：约女孩出去，请求加薪，会见陌生人，尝试新事物等。</li>
<li>令我们害怕的是这些事情的失败对我们自我的影响。我们害怕失败会暴露我们的缺点，打破我们易碎的希望和梦想。这些才是我们真正害怕的东西！</li>
<li>完美主义能保护我们免遭这种象征性的失败。如果你永远不做尝试，你就永远无法证明在某些方面你远远未达到世界领先水平。完美主义带来的神秘感让你可以永远活在完美的幻想中，不用接受考验，也不用被拒绝。</li>
<li><strong>如果你能承受某种不幸，并因此而变得强大，那你就不需要所谓的“保护”。没有了保护，你会变得更加优秀。</strong></li>
</ol>
<h2 id="第三章-完美主义的毒性">第三章 完美主义的毒性</h2>
<ol>
<li>
<p>励志卓越可以成为你努力的动力，追求完美却只会让你身心俱疲。</p>
</li>
<li>
<p>衡量一种心态的好坏，重点要看它对你的行动产生的影响，以及你对自身作为的情绪。</p>
</li>
<li>
<p>我可以花上好几页的篇幅援引无数名人声称自己是完美主义者的论调，然而，大部分人只不过是在表达他们追求卓越的决心，还有一些人实际上是在表达自己善于进行自我批评，另外还有一些人二者兼具。</p>
</li>
<li>
<p>无论做什么事，都要先明确其真实状态，然后再去寻找对策，而不要一开始就想当然。</p>
</li>
<li>
<p>运动也好，人生也罢，最好的结果都来自训练。如果训练让你的某种技能达到了本能（即潜意识）的水平，那你的意识就可以得到放松，而这种放松状态要比紧绷状态更加高效而有用，因为这时你的注意力更容易集中。</p>
</li>
<li>
<p>之所以说自我设限是完美主义的特质，是因为有了它，你就可以在自己的失败旁边加个脚注，好像这次失败事出有因一样。</p>
</li>
<li>
<p>这绝非陈词滥调，从神经学角度讲，在频繁经历失败或痛苦后，我们的大脑在面对这些失败和痛苦时便会具备更强的抗压力。</p>
</li>
<li>
<p>们会自我设限的领域通常有以下这些。</p>
<p>● 事业（比如在工作中三心二意或放松懈怠，就好像在为某个特殊场合或合适时机“预先储存”精力一样）</p>
<p>● 爱情（比如对待一份感情不全心投入，总是保持距离等）</p>
<p>● 人际关系（比如找各种借口避免和人交谈，假装不在乎等）</p>
<p>● 个人形象（比如不愿表现出最好水平，这样一来如果被人拒绝，你就有了合理的借口解释）</p>
<p>● 健康（比如因为受了点小伤或出了点小问题就拒绝运动，而这些问题其实都不影响运动）</p>
</li>
<li>
<p>完美主义就是这样一种“不可见”的习惯，它是一整套认定“做到完美才算合格”的思维方式。</p>
</li>
<li>
<p>如果你有了动力，不管什么工作都成了小菜一碟，完成它都成了顺理成章的事，根本不需要动用意志力。然而，这么做并不明智，因为它不是每次都有效。比如，那些关于完美主义的书以“你已经很棒了”或“你已经做得很好了”等煽动性的话语鼓励读者，这只能暂时缓解完美主义对他们内心的控制，暂时让他们感到改变的力量，但其实并非长久之计。</p>
</li>
<li>
<p>我们的行动会严重影响我们的情绪，其影响会强大到令我们做出改变，哪怕你根本不是故意为之。</p>
</li>
<li>
<p>在动力策略中，思维先行是改变情绪的标准做法。要是自身没有达到一种自愿采取行动的心理和情绪状态，人们并不会主动采取行动。</p>
</li>
<li>
<p>关键是，行动本身就是最好的出发点，因为它能引发更多的行动；而一味寻找更多动力前进的方法并不可靠，也很低效。</p>
</li>
<li>
<p>试想一下，如果你的终极目标是受到激励而去健身，工作一天后，你发现自己根本不愿意被激励，也不愿提高自己的动力，那你又会怎么办呢？</p>
</li>
<li>
<p>通过采取行动来改变思维和情绪要比通过改变思维和情绪来改变行动容易得多。</p>
</li>
</ol>
<h2 id="第四章-不完美主义带来自由">第四章 不完美主义带来自由</h2>
<ol>
<li>
<p>不完美主义并不等于懒散、低标准、安于失败、不追求优秀与进步或对世事漠不关心。从其本质上说，不完美主义也追求美好，采取积极行动，但并不指望达到完美，更不用说把完美当成理所应当的结果了。比起把事情做好，不完美主义认为重要的是先把事情做完。</p>
</li>
<li>
<p>完美主义之所以无效，是因为它的前提就不成立，它竟然认为伟大的成就可以在首次尝试时就实现。</p>
</li>
<li>
<p>如果你希望人生中有好事发生，即使你的轮胎气不足、车身已生锈、前车灯坏了，你也必须即刻出发。因为只有走出去，你才能看到新世界、邂逅新的可能性，才能有更多实现成长、享受人生的机会。</p>
</li>
<li>
<p>我会尽量向你传递让你的生活更有价值的信息。为完成这部作品，我做了大量研究，付出了许多心血，希望它不会令你失望。</p>
</li>
<li>
<p>奉行完美主义还是不完美主义，主要取决于你真正关心的是什么</p>
<p>● 不那么在意结果，更在意过程。</p>
<p>● 不那么在意问题本身，更在意在有问题存在的情况下能取得的进展。如果有些问题必须解决，那就关注具体的解决办法。</p>
<p>● 不那么在意别人对你的看法，更在意你想成为什么样的人，成就什么样的事。</p>
<p>● 不那么在意行动正确与否，更在意是否在行动。</p>
<p>● 不那么在意失败，更关注成功。</p>
<p>● 不那么在意所谓时机，更在意任务本身。</p>
</li>
<li>
<p>总体来说，不完美主义背后的逻辑是：不那么在意条件和结果，而关心眼前具体怎么做才能掌控自己的身份与人生，积极前行。</p>
</li>
</ol>
<h2 id="第五章-过高期待">第五章 过高期待</h2>
<ol>
<li>
<p>要想少吃饼干，最好的做法是根本不买，而不是在家里存满饼干后靠自己的意志力来解决问题。同理，要想改变自己的情绪，最好的做法是改变自己内心的期待，因为它是决定情绪的先导因素。</p>
</li>
<li>
<p>最好的组合是你的总体期待很高（如自信）但具体期待很低（如适应力和做具体事的信心）。</p>
</li>
<li>
<p>如果一个人的总体期待高，意味着他相信自己的生活会好事连连。但是他们对社交的具体期待低，也就是说他们预想到将有许多问题发生，也欣然接受任何社交情景都可能不尽如人意的事实。</p>
</li>
<li>
<p>如果我们能对自己有总体的自信，不把信心寄托在任何个体事件上，我们就会变成生活中的常胜者，更好地享受生活。</p>
</li>
<li>
<p>有过高期待的完美主义者总会等到条件完美后再去采取行动。他们如果要写书，就会等到有一定精力时再写。这是因为如果精力太差，他们会觉得自己的状态更适合看电视，在精力更充沛时才能去做一些需要更高主动性的事。他们还要求自己有足够的动力（也就是说，他们得产生想做这件事的欲望）。</p>
</li>
<li>
<p>不管你想做什么——运动、写作、阅读、游泳、跳舞、唱歌、大笑——你都要降低行动标准。如果你愿意在“下水道”里做这件事，那么你在什么情况下都能做这件事。</p>
</li>
<li>
<p>如果生活中有什么事情对你很重要，你就应该致力于将其日常化——不要将其特殊化——因为习惯本身就是日常化的。</p>
</li>
<li>
<p>取得结果的唯一方式就是完成相应的过程。无论你多么想要得到什么，都不可能跳过获取它的过程。不完美主义者大都不在意结果，因为一旦看淡了结果，过程本身便容易了许多。</p>
<p>● 完美主义者把对良好结果的预期作为过程中的动力。</p>
<p>● 不完美主义者关注的是过程本身，至于结果，则是水到渠成的事。</p>
</li>
<li>
<p>“看淡结果”的一些具体做法如下。</p>
<p>● 淡化对分数的关注，从而提高自己的应试能力</p>
<p>● 淡化对遭到拒绝的担心，从而在社交场合更放松</p>
<p>● 淡化失误和不完美表现，从而更好地演讲</p>
<p>● 淡化对焦虑想法和情绪的在意（随它们去，不强行化解它们），从而减少焦虑</p>
<p>● 减少对消极想法的担忧，从而缓解抑郁</p>
<p>● 淡化对工作量（或质量）的关注，从而提高效率</p>
</li>
<li>
<p>关注过程者在起床时并不会考虑健身的事，因为过程还没有进行到那一步。再难的过程，只要分解成一步一步去看，难度就会降低；相反，如果看得太长远，人们则会望而却步。这并不是说关注过程者从来不会考虑苛刻的环境，只是他们会对自己说：“确实不好办，但我还是想一步一步做下去，看最终会怎样。”你一旦最终到了健身房（或者其他目的地）并开始了训练，你就会惊喜地发现自己最初找到的关于环境借口是站不住脚的。</p>
</li>
<li>
<p><strong>在这一章里，核心思想是：降低期待，降低行动门槛，专注于行动过程和过程中的改进</strong></p>
</li>
</ol>
<h2 id="第六章-纠结不放">第六章 纠结不放</h2>
<ol>
<li>
<p>纠结不放也是完美主义的一种表现。</p>
</li>
<li>
<p>对过去纠结不放，表面上看似乎对你有所帮助，但实际上，因为毫无作为，你并没有为事情的解决做出任何实质性行动。</p>
</li>
<li>
<p>纠结者（的思想和行动印证了他们）总是抱有以下想法。</p>
<ol>
<li>
<p>要想解决问题，就得关注问题本身。</p>
</li>
<li>
<p>他人对自己抱有很高的期待。</p>
</li>
<li>
<p>自己的身份完全取决于自身表现好坏（而非行动和本性）。</p>
</li>
<li>
<p>任何偶发的消极结果都是个人失败的证明。</p>
</li>
<li>
<p>希望回到过去（这些人对过去耿耿于怀，希望能穿越回去，做出改变）。</p>
</li>
</ol>
</li>
<li>
<p>纠结不放是一种绝望而无谓的挣扎。你的反思并不能改变过去，只能让你进一步自我否定，而接受现实才是当前困境的解决方法。</p>
</li>
<li>
<p>意外的结果不能被视为失败。如果严格按照词义分析，一次意外的结果可能也相当于一次“失败”（即不成功的结果），这样说也无妨。但问题是，大部分人都把失败看成自身表现欠佳造成的过失或行为缺陷。</p>
</li>
<li>
<p>任何存在偶然因素的目标都是如此。也就是说，如果发生不幸，并且是偶然因素决定的，那么你就无权（更没有任何理由）认为这标志着你个人的失败。了解了这一点，对我们所有人来说都是一种解脱，我们再也不必纠结于以前曾经拒绝过我们的工作、异性、各种机会和奖励。</p>
</li>
<li>
<p>**如果有些事依赖偶然因素，一定要固执地坚持尝试。**如果尝试一件由偶然因素决定的事不需要你付出任何代价，不会产生任何成本，你没有理由放弃。投稿一篇文章、邀请异性共进晚餐、申请梦想中的工作、和老板商讨加薪这些事都没有什么成本，但一旦成功，就会带给你很多好处，所以不必感到抱歉，请立即采取行动。一定要有行动力。</p>
</li>
<li>
<p>**如果失败了，就换个方法重新来过。**切实的失败和偶然导致的失败不同，可以让你吸取经验，避免重蹈覆辙（爱迪生那些失败的灯泡就是这个道理的最好证明）。</p>
</li>
<li>
<p>如果你怀疑某件事的消极结果属于意外和失败的结合，那你也不要放弃，这一次，你要根据失败成分的多少来调整做事的方法。</p>
</li>
<li>
<p>改进自我对话方式</p>
<ol>
<li>首先要寻求理解自己，之后才能被自己理解</li>
<li>要说“可以”，而不是“应该”</li>
</ol>
</li>
<li>
<p>纠结者的最大问题在于他们不敢再次尝试。</p>
<p>● 面试惨败，便总是纠结自己在面试中的错误表现，而不是放下包袱继续前行，申请其他工作（甚至再次申请之前拒绝自己的公司）。</p>
<p>● 晚餐场合说错话，就不再继续聊天，缩进自己的壳，一门心思纠结自己本不该说的话，却不行动起来去补救过失。</p>
<p>● 曾经被女孩拒绝，于是就一直活在失败的阴影里，不再主动邀约，错过一个又一个机会（而后再为此懊恼）。</p>
<p>● 在运动受伤后便对自己的不幸耿耿于怀，没能第一时间去看医生，寻找康复的办法。</p>
<p>● 考试失败后只会郁闷，却不为下次更好表现而努力</p>
</li>
<li>
<p>应对纠结的技巧小结</p>
<ol>
<li>接受沉没成本</li>
<li>如果你纠结的事情与你的个人表现相关，你要明确它属于意外还是失败。如果是意外，那就再试试；如果是失败，那就要庆祝自己排除了一种错误途径，可以再想新的办法，重新来过。</li>
<li>修正错误的自我对话方式。</li>
<li>积极行动起来。</li>
</ol>
</li>
</ol>
<h2 id="第七章-认同需求">第七章 认同需求</h2>
<ol>
<li>缺乏自信会造成内心的不安，如果你对某些事情没把握，你自然希望寻求进一步的确认。因此，认同需求这一问题的解决办法就是增强自信。只要增强了自信，你也就不再需要他人的认同来明确自身价值了。</li>
<li>三重自信法
<ol>
<li>受试者保持自信身姿站立两分钟后，体内睾酮指标就会上升20%，而皮质醇指标则会下降25%。</li>
<li>可以模仿自信</li>
<li>调整参照标准</li>
</ol>
</li>
<li>鉴于自信的参照标准因人而异，我们最好创建一个适合自己的。</li>
<li>建立强大自信的关键是明确你现在对什么有自信，然后在此基础上努力。</li>
<li>我并不是说设定较低的标准，自信就会随之而来，我们还是需要一些时间。但无论如何，与设定高标准相比，你的自信都会来得更快，因为低标准的作用就是让你能够迈出第一步。</li>
<li>被人拒绝可能会令人沮丧，但是请记住，这种拒绝和失败是一次性的：你只是被那一个人在那个时间以那种方式在那个领域拒绝了而已。遭到一次拒绝不等于未来再无翻身之日。</li>
<li>尴尬情绪对我们来说也没什么好处。你能想到尴尬情绪改善了你生活的任何例子吗？尴尬的作用仅仅是打消我们做事的积极性，以避免造成更多尴尬，这是一种循环论证。</li>
<li>解开认同需求对我们的束缚需要多加练习
<ol>
<li>在公共场合保持自信站姿</li>
<li>在公共场合唱歌</li>
<li>在公共场所躺倒三十秒</li>
<li>背腰包</li>
<li>与陌生人攀谈</li>
</ol>
</li>
<li>我并不是说你在生活中的任何时候都不需要获得他人的认同，因为事实并非如此，例如，需要并努力寻求你伴侣的认同就是非常明智的做法。但是，如果你的认同需求已经扩散到你接触到的每一个人，那它就成了需要解决的问题，因为那时的你已经走向了极端，你的真实性格和喜好已经被那源源不断的老生常谈、社会期待及一心求稳的生活方式彻底扼杀了</li>
</ol>
<h2 id="第八章-过失担忧">第八章 过失担忧</h2>
<ol>
<li>对过失的过分担心会增加你的焦虑和对行动的恐惧。</li>
<li>“完美主义者对几乎所有没有十足把握的事情，都选择敬而远之”。</li>
<li>如果我们内心以为完美是外界对我们的要求，那任何成就都不足为奇。</li>
<li>活出真我，表达自己的真实情绪。介意你表现的人对你而言并不重要，而对你真正重要的人根本就不介意你的表现。</li>
<li>“正视恐惧”完全是一种治标不治本的方法，企图用肤浅的手段解决根深蒂固的思想问题根本不可行，动力总是稍纵即逝。</li>
<li>害羞的人总希望不用通过练习就找到让自己健谈的“绝佳方法”。其实“面向对方，开口讲话”是最为简单、有效的方法。你越勇于尝试，就越能通过反馈学到表达和与人沟通的方法，与人对话时也就越自在和纯熟。</li>
<li>令人困扰的并不是犯错这件事本身（如漏洗袜子、没碰到开关之类），我们之所以感到恐惧，是因为错误意味着我们是怎样的人。</li>
<li>导致拖延症的深层原因不是懒惰，而是过于复杂的目标以及随之而来的恐惧心理，而二者正是源自完美主义心态。</li>
<li>不完美主义者期待的不是完美的结果，而是完美的进步和持续发展。</li>
<li>大部分人都已经意识到，人生的关键是做正确的事。这不是说让你成为一个工作狂——人生并不止于此。所谓正确的事，可能是指在需要“充电”的时候放松地去看一部电影或补个午觉。放松是和谐、幸福人生的重要部分。与此相对的是毫无主见、终日随波逐流的消极生活方式。</li>
<li>微习惯策略不是让你降低标准，而是让你重新定义成功，成功应该是进步的过程，你提高的应该是关于坚持多久的标准。</li>
<li>在这里，发挥作用的还有另一个因素，那就是自主性（自由）。所谓自主性，就是你能掌控自己的决策，并愿意承担相应的后果。如果你设定了一个过于宏大的目标，你就把主动权交给了目标本身，而丧失了自己的掌控力。</li>
<li>对儿童来说，叛逆会表现为一时的情绪激动，但对成年人来说，叛逆的做法就是放纵自己看电视，无谓地在网上浪费时间，或是找出各种办法回避目标。</li>
</ol>
<h2 id="第九章-行动顾虑">第九章 行动顾虑</h2>
<ol>
<li>
<p>预设是人们对某些行动产生顾虑的主要原因。所谓预设，就是对可能结果的预判或想象，但预设往往并不准确。</p>
</li>
<li>
<p>预设的问题是它过于理论化。你可以做一辈子的预设，但要想知道事情究竟会怎么发展，唯一的办法就是亲身实践。一旦开始实践的过程，你就会发现，最初的预设存在很多问题。对这些问题进行总结后，未来的你就可以尽量避免被错误的预设蒙蔽。</p>
</li>
<li>
<p>如果你假设“我永远无法靠［在这里填进你理想的职业］养活自己”，那你可能都不会尝试一下。如果你已经做出尝试并经历了失败，请记住，你需要做的是认真总结经验教训、仔细分析偶然和失败的因素占比。</p>
</li>
<li>
<p>大部分追求理想的过程都包含了大量的偶然因素，需要多次努力才可能成功，也就是说，以“体验过一次就可以了”为借口，失败一次就彻底放弃，实乃大错特错。</p>
</li>
<li>
<p>要想对预设有深刻的认识，你可以先把自己的预设记录下来，采取实际行动后再把真实的结果写下来。我保证，经过对比，你一定会有所发现。</p>
</li>
<li>
<p>关于拖延症，每个人都有自己的理论。</p>
<p>● 那是因为那项工作令我们害怕</p>
<p>● 那是因为我们要做的事已经把时间都占满了（帕金森定律）</p>
<p>● 那是因为我们玩手机游戏上了瘾</p>
</li>
<li>
<p>哲学家约翰·希尔勒（John Searle，2002）曾经详细讨论过二者的区别。他认为，理性分析需要一定程度的自由意志（或对行为的有意控制），因为如果我们不根据分析结果采取相应的行动，那理性分析就失去了实际的作用。希尔勒进一步强调说，人们可以为某种行为找出无数个该做的理由，但可能还会选择毫无作为，这一点就说明，思考和选择是两个完全不同的步骤。</p>
</li>
<li>
<p>鉴于我们面对的大多数重要任务也是最令人恐惧的，恐惧往往会驱使我们选择零风险或无意义的替代任务来把时间填满（即让我们轻重不分、本末倒置）。到时候，你会把时间放在打无聊的游戏或浏览社交媒体等没用的事情上，好像这些事非做不可一样，而把真正重要的事放在了一边。</p>
</li>
<li>
<p>这不就是人生的关键吗？行动起来，随机应变，转危为安。比起原地不动，非要等到有了十足把握才有所作为，随机应变才更令人兴奋，成效也更显著。</p>
</li>
<li>
<p>非常可能。在PDM忙于筹划完美计划的时候，IDM已经用实际行动积累了许多经验。完美决策者的最大问题就是：就算是一台完美决策机器，也不可能用不完美的数据做出完美的决定。</p>
</li>
<li>
<p>我们一直像追寻梦寐以求的圣杯一般对待正确决策，但不完美决策者之所以成为最后的赢家，并不是因为他们的决策有多正确，相反，不完美决策者比完美决策者犯的错误多得多。但如果你犯的错误不会对你造成永久的伤害，就会反过来给你很大的帮助。</p>
</li>
<li>
<p>如果无法摆脱行动顾虑的困扰，培养哪些方面的技能才能对这一问题有直接的帮助呢？之前我们讨论过，拖延症患者总是无法从过度思考阶段脱身，因为他们不仅对自己的想法存疑，而且还担心它不是眼下最好的选择。针对这种症状，以行动为基础的办法最简单易行——快速决策。</p>
</li>
<li>
<p>事实上，你完全不必陷入过度思考的怪圈，相反，可以培养一种速战速决的习惯，设法快速进入实施阶段。我们做的所有决定，最终都是为了实施。实施就意味着行动，行动就意味着学习和进步，而只有学习和进步才是通往成功的路。</p>
</li>
<li>
<p>只要你意识到做某事的好处大于坏处，就应该立刻开始行动。</p>
</li>
<li>
<p>当你当机立断地做出决定，迅速进入行动模式，节省下来的时间和精力可以让你做更多喜欢的事。大脑中负责决策的部分是前额皮质，而决策本身又是一个耗费精力的任务，所以如果我们能加速这一过程，就能节省大量精力。</p>
</li>
<li>
<p>如果你能降低行动的标准，快速决策就会变得更容易了。</p>
<p>举例：我最近读了一篇博文，整篇文章是作者在手机上完成的。他当时在公交车上，到了该发博客的时间，但他没带笔记本电脑，于是就选择了手机。大部分博主——包括我本人——都有一个共同标准，即“我如果没带笔记本，就没办法发表博文”。但这位博主降低了行动标准，从而在不理想的条件下也做出了一个高效的决定。如果他固执坚持旧有标准，很可能会纠结该不该用手机写博客，浪费很多时间和精力。</p>
</li>
<li>
<p>无论是哪种情况，你都在积极行动，而不是在被动等待。</p>
</li>
<li>
<p>我比较喜欢的方法是行动起来，边做边学。</p>
</li>
<li>
<p>最终成功的人（不论你如何定义成功）都不是那些第一次尝试就成功的人，而是那些经历过挣扎但善于总结经验的人。</p>
</li>
<li>
<p>“从量变到质变”这一说法更为准确。如果你能在尝试中不断完善自己，通过重复来改进行为，就会比希望第一次尝试就做到完美无缺的人更容易取得成功。这一点很耐人寻味，因为它意味着为了实现最终目标，你不该纠结质量，而应该寻求数量。</p>
</li>
<li>
<p>要想获得最终的胜利，我们需要的是持久的习惯，而不是动力的三分钟热度。</p>
</li>
<li>
<p>要有远大的梦想，但梦想远大并不意味着你必须要设定宏大的目标。在我认识的人中，我算是梦想最为远大的了——我的一个梦想是给娱乐产业带去革命。而现实中，我却只着眼于一个又一个微小的目标。当我将自己从完美的宏大目标中解脱出来，我才从健身、写作、阅读等小领域开始一步一个脚印地向梦想前进。梦想远大，不代表必须要设定一个遥不可及的目标。一言以蔽之，追求远大梦想最可行的办法是大量攻破一个个小目标。</p>
</li>
</ol>
<h2 id="第十章-应用指南">第十章 应用指南</h2>
<ol>
<li>
<p>我并不是在说，我们应该莽撞地冲向最令我们感到痛苦的事情，我只是想告诉你，一切路径都是有价值的。也许有些选择明显优于其他，但寻找最佳路径并不是我们人生的目标，向前发展才是。</p>
</li>
<li>
<p>微习惯每天越早完成越好，这样它就会影响你一天的心态</p>
</li>
<li>
<p>对于整体上的完美主义</p>
<ol>
<li>
<p>改变关注重点，</p>
<p>● 忽略结果，关注自己的投入。</p>
<p>● 忽略问题，关注自己在问题条件下取得的进步。如果你必须解决一个问题，就把重点放在解决过程上。</p>
<p>● 忽略他人看法，关注内心真实想法：你到底想成为谁，想做什么。</p>
<p>● 不纠结于是否做得正确，重点是做了就比不做强。</p>
<p>● 忽略失败，多想想成功。</p>
<p>● 忽略所谓时机，多想想任务本身。</p>
</li>
<li>
<p>遵循不完美主义者的过程思维</p>
</li>
</ol>
</li>
<li>
<p>对于过高期待</p>
<ol>
<li>
<p>调整自身预期</p>
<p>你对自己行程中的各项活动抱有怎样的期待呢？如果预期过高，请把它们降低；更好的选择是彻底放弃预期，保持随机应变的心态。这样做并不会影响你享受生活中发生的好事，只会帮你为消极结果做好心理准备。</p>
</li>
<li>
<p>正确判断是否足够</p>
<p>要用负责的心态对所谓“足够”做出判断，只有你自己知道对你而言多少算够，不要让周围盛行的“永不满足”的心态成为你的座右铭。</p>
</li>
<li>
<p>降低标准</p>
<p>因为长此以往，你在潜意识中就能开始慢慢接受小的进步和成功。</p>
</li>
<li>
<p>关注过程</p>
</li>
</ol>
</li>
<li>
<p>对于纠结不放</p>
<ol>
<li>
<p>接受现实</p>
</li>
<li>
<p>采取行动</p>
<p>改变想法的最好办法是按照你希望达成的目标采取行动。如果你纠结过去，现在就采取行动（特别是针对纠结的事）就是消除纠结最有效的办法。</p>
</li>
<li>
<p>分清意外与失败</p>
<p>所谓失败，指的是责任完全在于你自己的情况——比如绊了一跤、调制饮料时放错了比例、拼错了单词等。而所谓意外，则包含了他人的因素，特别是当决策权在他人手中的时候——比如请客吃饭时出了问题、向上司要求加薪未果、参加《美国偶像》比赛失利、写作成绩不理想等。</p>
</li>
<li>
<p>改进自我对话方式</p>
<p>“本应该”反映的是你对过去愧疚的心态，而“本可以”则预示着未来还有其他机会。你的自我对话对你看待事物的方式有很大的影响，这是一种最容易实现的改变，却能在短时间内改变你的人生。</p>
</li>
<li>
<p>可以适当采用计时器</p>
</li>
</ol>
</li>
<li>
<p>对于认同需求</p>
<ol>
<li>模仿自信</li>
<li>调整参照标准</li>
<li>自己做决定</li>
</ol>
</li>
<li>
<p>对于过失担忧</p>
<ol>
<li>记录成绩日志</li>
<li>减少对成功的评估标准，二进制化</li>
<li>从小的成功做起</li>
<li>分阶段成功</li>
</ol>
</li>
<li>
<p>对于行动顾虑</p>
<ol>
<li>拒绝预设</li>
<li>快速决策</li>
<li>分析风险，回报，与可能性</li>
<li></li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《微习惯》读书笔记]]></title>
        <id>https://youlianning.github.io/post/lesslesswei-xi-guan-greatergreater-du-shu-bi-ji/</id>
        <link href="https://youlianning.github.io/post/lesslesswei-xi-guan-greatergreater-du-shu-bi-ji/">
        </link>
        <updated>2022-08-21T11:06:02.000Z</updated>
        <summary type="html"><![CDATA[<p>全书共阅读时间：3天。阅读时长：2.5小时😄</p>
]]></summary>
        <content type="html"><![CDATA[<p>全书共阅读时间：3天。阅读时长：2.5小时😄</p>
<!-- more -->
<h2 id="第一章-微习惯是什么">第一章 微习惯是什么</h2>
<p>微习惯体系的基础在于“微步骤”，那些“小得不可思议的一小步”。把事情分成小步来做不是什么新概念，但是为什么它效果显著？它的原理是什么？这两个问题还没有明确的答案。当然，微步骤的概念因人而异，你的一小步对我来说可能是一次巨大的跨越。“小得不可思议的一小步”这种称法把它的特点体现得淋漓尽致，因为如果和你的能力上限相比，一个步骤简单得让你匪夷所思，那它就再合适不过了。</p>
<p>首先，在完成你的微目标之后，你很可能会继续完成“额外环节”，这是因为我们本来就想进行这些积极行为，所以一旦开始，内心的抵触就会减轻。第二个收获是惯性。即使你没有超额完成微目标，你的行为也会慢慢发展为微习惯。从这里开始，你会完成“额外环节”或逐步提升习惯，还会接连不断地收获成功。</p>
<h2 id="第二章-大脑的工作原理">第二章 大脑的工作原理</h2>
<p>人的大脑有惯性的部分，也有主动的部分。最容易实现的，是惯性的部分。所以微习惯就是试图将我们想要实现的事情，渗透进大脑的惯性部分。</p>
<h2 id="第三章-动力vs意志力">第三章 动力vs意志力</h2>
<ol>
<li>人的行为可以有三个来源：行动力，意志力，习惯</li>
<li>行动力收到情绪的影响</li>
<li>意志力是有上限的，可以锻炼提高上限。</li>
<li>消耗意志力的因素有：努力程度、感知难度、消极情绪、主观疲劳和血糖水平。</li>
<li>增强意志力的因素有：动力激励、自控力任务训练以及补充血糖等做法</li>
<li>如果相信自己的意志力是无限的，那么意志力就可以获得极大的增强</li>
</ol>
<h2 id="第四章-微习惯策略">第四章 微习惯策略</h2>
<ol>
<li>微习惯策略就是强迫你自己每天实施1到4个“小得不可思议”的计划好的行动。这些行动小到不会失败，小到不会因为特殊情况就被你轻易放弃。它们有双重作用——激励你继续做下去，并会成为（微）习惯。</li>
<li>微习惯是为了尽可能保留意志力</li>
<li>努力程度方面：微习惯需要非常少的实际努力。刚开始它很严格，会强迫你开始行动，之后会变得充满弹性，让你自行决定想超额完成多少。</li>
<li>感知难度方面：微习惯的本质决定它几乎不会让你在还没做的时候就感到困难，避免大脑对困难的无限放大</li>
<li>消极情绪方面：因为微习惯的目的是为人生增添美好事物，所以它和消极情绪的关系不大</li>
<li>主观疲劳方面：主观疲劳无法彻底消除，但是微习惯可以有效缓解主观疲劳。</li>
<li>血糖水平方面：虽然血糖水平和微习惯相对独立，但微习惯的确会节约能量和意志力，而且会在心理上不断给予你能量，所以它可以在最大程度上保留血糖。</li>
<li>一小步+想做的事=较高的进一步行动的可能性</li>
<li>大脑一般会抵抗剧烈变化，但是对微行动，它不会有太大反应</li>
</ol>
<h2 id="第五章-微习惯的独特之处">第五章 微习惯的独特之处</h2>
<ol>
<li>过去常见的习惯策略，都要求人立刻做出较大的改变，从而消耗了大量意志力</li>
<li>如果不好意思向别人搭讪，可以先向对方迈出左脚，再迈出右脚，朝对方的方向走过去</li>
<li>微步骤+意志力是必胜组合</li>
<li>微习惯没有截止时间</li>
<li>“如果缺乏基本能力，期待值本身不会产生想要的结果”。只靠相信自己是不够的。</li>
<li>微习惯能够一改过去只给人挫折的面貌，而真正给人带来实现和进步的快乐</li>
<li>正是因为必须写出少得可怜的50字，我才有可能写出2000字。在此之前，有些时候我一个字都不会写。正是写很多的野心最终导致我写得很少。</li>
<li>传统管理哲学的目标是控制雇员，而不是发挥他们的能力。</li>
<li>自主权或对自己拥有控制权和决定权的感觉是工作满意度的一个首要因素。</li>
<li>很多人会说，你必须强迫自己埋头苦干才能达到人生目标，但强迫自己埋头苦干本身不就标志着你在某种程度上不喜欢这种方式吗？在提升自己的过程中，难道你不想好好对待自己吗？</li>
<li>自助书籍的另一个极端包括一些空洞的、激励人心的废话，还有那些让你自我感觉良好、看起来人畜无害的鸡汤散文。你也许会在短时间内感觉充满动力，但正如我在前文证实的，长期来看，依赖情绪和动力并没有效果。</li>
<li>微行动以天或星期为时间段给自己设定严格的目标，可是它们实践起来特别轻松，所以你在潜意识里不会感到自己被你的计划控制（这是重点！）</li>
<li>幸福感会促使人们进行抽象思考，这有助于看清全局，但会不利于实现目标，因为实现目标需要具体思维。</li>
<li>幸福感会削弱你完成具体目标的能力。</li>
<li>在实现具体目标之后，你可以利用“想获得健康”这个抽象目标让自己再多做一些锻炼。</li>
<li>远离恐惧、怀疑、胆怯或犹豫</li>
<li>行动是征服这些消极情绪的最佳武器。迈出第一步会消灭恐惧，即使不是马上消灭，总有一天也会的。</li>
<li>正念是一个人能培养出的最重要的技能之一，它指的是对自己思维和行动有清醒的认识。正念是目标清晰地活着和敷衍地活着之间的区别。</li>
<li>微习惯增强正念和意志力，给你超乎想象的惊喜</li>
</ol>
<h2 id="第六章-彻底改变只需八步">第六章 彻底改变只需八步</h2>
<ol>
<li>选择合适的微计划
<ol>
<li>制定计划，不宜贪多，以2，3个为宜</li>
<li>切记，不可中断</li>
<li>增加新的微习惯总是很轻松，但是必须放弃一个却很艰难。</li>
<li>微习惯的目标是100%成功，而不是95%。</li>
<li>如果你只在一个微习惯上失败，也不会有完全成功的感觉，而完全成功的感觉对维持较高的自我效能感很重要</li>
<li>我的经验法则是把我想要的习惯缩小，直到小得不可思议为止。</li>
</ol>
</li>
<li>挖掘每个微习惯的内在价值
<ol>
<li>习惯是否值得我们付出努力的最佳方法是先认清来源。最好的习惯直接源于你的生活观念。来自同龄人的压力和别人对你的期待并不是我们要寻找的想法来源。</li>
</ol>
</li>
<li>明确习惯依据，将其纳入日程
<ol>
<li>根据时间制定的日程安排非常严格，不会出现含糊不清的情况，这有助于你完成工作，同时培养自控力。不足的一面是缺乏灵活度。生活总是不按照你的日程安排走。你错过习惯依据，任务拖到后来才完成，就会陷入一种不知该感觉成功还是内疚的尴尬处境。</li>
<li>根据行为方式制定的日程安排更灵活，同时也会更含糊。它们有助于你在缺乏规律的生活中培养出规律，而麻烦在于怎么精确判断一项活动什么时候结束，另一项什么时候开始。</li>
<li>微步骤能让我们开始，并能让我们积聚动量冲向一个有意义的目标，可是它也会帮倒忙。如果你允许自己退一小步，很快就会发现它会违背你的意愿，愈演愈烈。（行动会有惯性）</li>
<li>微习惯的根源在于自主、自由和灵活度，其目标是给予你能量，让你不断取得成功。</li>
<li>微习惯小到不可能失败，所以有没有依据无所谓。</li>
<li>好习惯能把坏习惯挤出你的生活，但如果它们不能和坏习惯共用一个依据，就无法起到瓦解坏习惯的作用。</li>
</ol>
</li>
<li>建立回报机制，以奖励提升成就感
<ol>
<li>享受成就感是让自己对生活满意的最有效的策略</li>
<li>在此过程中要让自己感到快乐。快坚持不下去时，我就会给自己一点奖励，休息一下。</li>
</ol>
</li>
<li>记录与追踪完成情况
<ol>
<li>把想法（无论积极还是消极）写在纸上时，会让其在大脑中更加突出，而打字就不具备同样的效应。一定要手写，才能将其重要性放大。</li>
<li>不管你选择什么策略，我建议你到睡前再检查自己是否成功。如果你在白天就早早地检查完毕，完成任务的感觉会降低你继续进行额外工作的动力。</li>
<li>一开始就写下你的微习惯，然后随着计划进展检查进度，这两件事对你的成功而言极其重要。不要跳过任何一步。无论你如何确认自己微习惯的完成情况，我建议你至少要亲自把习惯手写在一个你能看到的地方。</li>
<li>不要设定任何含糊的目标。含糊的目标或习惯缺乏明确导向，毫无意义，是很糟糕的想法。</li>
<li>把目标定为每天1个俯卧撑，然后连续200多天超额完成目标才更有趣。</li>
</ol>
</li>
<li>微量开始，超额完成
<ol>
<li>意志力的优点是它可以得到强化。</li>
<li>在建立习惯的道路上，我们想做三件事：●强化我们的意志力●当下就取得进步●不耗尽意志力</li>
<li>反复不断地强迫自己执行可实现的任务，我们的意志力就会变得更强大。这就叫练习。</li>
<li>微习惯绝不会阻碍你进步，就好像火花绝不可能阻碍一场大火的蔓延一样。微习惯就是拥有无限潜力的火花。</li>
<li>微习惯的特点，就是它能够形成正反馈，在保证最低限度的情况下，给了未来突破的可能性</li>
</ol>
</li>
<li>服从计划安排，摆脱高期待值
<ol>
<li>最好避免对某种具体行为规律产生较高的期待值</li>
<li>从潜意识层面看，超额完成目标后，大脑会设定一个新的期待值，它承载了你以前设定过的典型目标。</li>
<li>我们要把期待值和精力放到坚持目标上，而不要对任务量抱有较高的期待。生活中最强大的武器就是坚持，因为这是让行为转变成习惯的唯一途径，而且当非习惯变成习惯，也就意味着你确实从与大脑对抗变成与其合作了。所以，一定要提醒自己，你每天的目标并没有改变，这一点极为重要。</li>
</ol>
</li>
<li>留意习惯养成的标志
<ol>
<li>微习惯策略效果很好，可是如果你在一个行为真正成为习惯之前就停止，继续添加下一组习惯，那么你可能会像个手法拙劣的杂耍艺人一样冒着让手里的橘子全部落地的风险。</li>
<li>代表行为已成为习惯的信号有：
<ol>
<li>没有抵触情绪：该行为似乎做起来容易，不做反而更难。</li>
<li>身份：现在你认同该行为，而且可以信心十足地说“我常看书”或“我是个作家”。</li>
<li>行动时无须考虑：你不需要做出执行的决定就能开始该行为。你不会想：“好吧，我决定去健身。”你会自然地收拾好东西并出发，这是因为到周二了，或者好像到该运动的时间了。</li>
<li>你不再担心了：刚开始时，你也许会担心自己漏掉一天或者早早放弃，可当行为变成习惯后，你知道你会一直做这件事，除非出现紧急情况。</li>
<li>常态化：习惯是非情绪化的。一旦一件事成为习惯，你不会因为“你真的在做这件事”而激动不已。当一个行为变为一种常态，它就是习惯了。</li>
<li>它很无聊：好的习惯并不会让人兴奋，它们只是对你有好处而已。你会因为它们而对生活更有激情，但别指望行为本身也是如此</li>
</ol>
</li>
<li>有些微习惯的火花能迅速燎原，而另一些则需要更长时间，这主要取决于你对这个习惯有多大兴趣，以及你对超越原始目标后继续行动的感知难度。</li>
<li>我几乎每天都能超额完成写作目标，但仍能随意把控自由度。我可以写满50字就停。如果我有其他安排，可以花几分钟完成最低目标，然后充分享受这一天。</li>
</ol>
</li>
</ol>
<h2 id="第七章-微习惯策略的八大规则">第七章 微习惯策略的八大规则</h2>
<ol>
<li>绝不要自欺欺人
<ol>
<li>比如每天做1个俯卧撑，却偷偷要求自己完成不止1个俯卧撑。你需要特别注意避免这么做，因为你每对自己提高一点要求，就需要更多意志力才能达到要求</li>
<li>你随时可以超越目标，所以要让这额外奖励来自于你自己，而不是你定下的目标。</li>
</ol>
</li>
<li>满意每一个进步
<ol>
<li>对小小的进步感到满意和标准低不是一回事。李小龙有一句名言能很好地总结这一点：“要满意，但别满足。”</li>
<li>微习惯策略的核心是一个很简单的大脑错觉，但同时也是一种重视开始的生活哲理，一种认为行动优于动力的生活哲理，一种相信将每一小步积累起来便能让量变转为质变的生活哲理。</li>
</ol>
</li>
<li>经常回报自己，尤其在完成微习惯之后
<ol>
<li>那么在早期阶段，在完成任务后给自己一些奖励，可能会帮助你坚持下去。</li>
</ol>
</li>
<li>保持头脑清醒
<ol>
<li>胜利者和失败者的区别就在于当事情变得单调而无聊时，失败者会放弃。这一点和动力无关，它体现了为形成终生的好习惯，你能否利用和保存意志力。</li>
</ol>
</li>
<li>感到强烈抵触时，后退并缩小目标
<ol>
<li>常识告诉我们，一定要突破强烈抵触情绪的阻碍，但我得说，这种做法很愚蠢。我们已经明确，意志力是有限的，如果强行突破自己的能力范围，可能会导致崩溃和受伤的结局。如果你认为过段时间再做也可以，那么你没有考虑到也许到时候你就没有足够的意愿或意志力了。</li>
</ol>
</li>
<li>提醒自己这件事很轻松
<ol>
<li>微习惯策略会让你相信，健康的习惯是很容易养成的。即使你现在仍然怀疑，一旦它开始起作用，你就只能选择相信了</li>
<li>这些行为在我们生活中变成了如此巨大的挑战，原因是我们被灌输了以动力为基础的社会理论，它说，你必须振奋起来才能实现梦想或者洗衣服。</li>
</ol>
</li>
<li>绝不要小看微步骤
<ol>
<li>如果你认为一步太渺小，那是因为你没有找到看待它的正确角度。每一个大工程都是由无数小步骤组成的，就像每一个有机体都是由微小的细胞组成的一样。采取微步骤能让你持续控制大脑。如果你意志力较弱，微步骤有时是你前进的唯一途径，学会爱上它们，你就会看到不可思议的结果！</li>
</ol>
</li>
<li>用多余精力超额完成任务，而不是制定更大目标
<ol>
<li>如果你急于取得巨大进步，那就把精力投入超额完成任务中。大目标在纸面上看着漂亮，但只有行动才算数。目标渺小、结果丰硕的状态比反过来好多了。</li>
</ol>
</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python多进程]]></title>
        <id>https://youlianning.github.io/post/python-duo-jin-cheng/</id>
        <link href="https://youlianning.github.io/post/python-duo-jin-cheng/">
        </link>
        <updated>2022-08-08T14:33:01.000Z</updated>
        <content type="html"><![CDATA[<p><strong>为什么要多进程</strong>：为了提高运算速度！多进程相当于将简单重复的任务分配到多个cpu内核上，让它们同时做互不相关的工作，从而提高系统的运行效率。</p>
<p><strong>测试例程①</strong></p>
<pre><code class="language-python">import random
import time
from multiprocessing import Pool

data = [(random.randint(1, 1000), random.randint(1, 1000)) for _ in range(10000)]


# 函数式编程
# 第一步：创建管道函数
def greatest_common_factor(a, b):
    &quot;&quot;&quot;
    此函数求取输入两个参数的最大公因数
    :param a:
    :param b:
    :return:
    &quot;&quot;&quot;
    r = a % b
    while r != 0:
        a = b
        b = r
        r = a % b
    return b


def simplify(pair):
    &quot;&quot;&quot;
    此函数将输入的数据对转化为最简形式
    :param pair:
    :return:
    &quot;&quot;&quot;
    n1, n2 = pair
    m = greatest_common_factor(n1, n2)
    return int(n1 / m), int(n2 / m)


if __name__ == '__main__':
    # 第二步：将数据输入管道
    t1 = time.time()
    res1 = map(simplify, data)
    res1 = list(res1)
    t2 = time.time()
    print(t2 - t1)

    p = Pool(processes=4)
    t3 = time.time()
    res2 = p.map(simplify, data)
    res2 = list(res2)
    p.close()  # 关闭进程池，不再接受新的进程
    p.join()  # 主进程阻塞，等待子进程推出
    t4 = time.time()
    print(t4 - t3)

# (t2 - t1) = 0.004999637603759766
# (t4 - t3) = 0.3481013774871826
</code></pre>
<p><strong>点评</strong>：我们能发现，在这个案例中，开了多进程的处理程序反而更慢一些，这违反了我们的直觉。事实上，这是因为我们处理的过程比较简单，所以python底层对其优化做的比较好，不需要通过调用多进程的方式进行加速。如果我们需要体现出多进程的优势，那么就需要模拟进行复杂计算的过程，如下所示</p>
<p><strong>测试例程②</strong></p>
<pre><code class="language-python">import random
import time
from multiprocessing import Pool

data = [(random.randint(1, 1000), random.randint(1, 1000)) for _ in range(20)]


# 函数式编程
# 第一步：创建管道函数
def greatest_common_factor(a, b):
    &quot;&quot;&quot;
    此函数求取输入两个参数的最大公因数
    :param a:
    :param b:
    :return:
    &quot;&quot;&quot;
    r = a % b
    while r != 0:
        a = b
        b = r
        r = a % b
    return b


def simplify(pair):
    &quot;&quot;&quot;
    此函数将输入的数据对转化为最简形式
    :param pair:
    :return:
    &quot;&quot;&quot;
    n1, n2 = pair
    m = greatest_common_factor(n1, n2)
    # 模拟进行耗时的复杂运算
    time.sleep(0.1)
    return int(n1 / m), int(n2 / m)


if __name__ == '__main__':
    # 第二步：将数据输入管道
    t1 = time.time()
    res1 = map(simplify, data)
    res1 = list(res1)
    t2 = time.time()
    print(t2 - t1)

    p = Pool(processes=4)
    t3 = time.time()
    res2 = p.map(simplify, data)
    res2 = list(res2)
    p.close()  # 关闭进程池，不再接受新的进程
    p.join()  # 主进程阻塞，等待子进程推出
    t4 = time.time()
    print(t4 - t3)

# (t2 - t1) = 2.1878116130828857
# (t4 - t3) = 0.9278745651245117
</code></pre>
<p><strong>参考资料</strong>：<a href="https://www.pythonheidong.com/blog/article/808006/ad82e3caefe1e9e092db/">为什么pool.map比普通地图慢？-python黑洞网 (pythonheidong.com)</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python函数式编程]]></title>
        <id>https://youlianning.github.io/post/python-han-shu-shi-bian-cheng/</id>
        <link href="https://youlianning.github.io/post/python-han-shu-shi-bian-cheng/">
        </link>
        <updated>2022-08-08T13:47:58.000Z</updated>
        <content type="html"><![CDATA[<p><strong>个人感受</strong>：函数式编程，就是将数据，输入管道中，得到输出结果。并且，输入不变，则输出也不变。</p>
<p><strong>函数式编程与一般编程的区别</strong>：</p>
<ol>
<li>函数式编程：多个数据，一次录入，得到多个数据结果</li>
<li>一般编程：多个数据，用上循环，逐个处理</li>
</ol>
<p><strong>测试例程①</strong></p>
<blockquote>
<p>需求说明：对于数据data = [1,2,3,4,5]，要求输出data = [2,4,6,8,10]</p>
</blockquote>
<pre><code class="language-python">data = [1, 2, 3, 4, 5, 6]

# 方法1：循环添加
res1 = []
for n in data:
    res1.append(n * 2)
print(res1)

# 方法2：列表表达式
res2 = [n * 2 for n in data]
print(res2)


# 方法3：函数式编程
# 第一步：创建管道函数
def func(i):
    return i * 2


# 第二步：将数据输入管道
res3 = map(func, data)
res3 = list(res3)
print(res3)

</code></pre>
<p><strong>点评</strong>：从三种方法的对比可以发现，函数式编程的优点，就是在保证对单个数据的处理不出错的情况下，对多个数据的处理也能不出错。</p>
<p><strong>测试例程②</strong></p>
<blockquote>
<p>需求说明：将摄氏温度，转变为华氏温度：摄氏温度*9/5+32</p>
</blockquote>
<pre><code class="language-python">data = [
    {&quot;city&quot;: &quot;Beijing&quot;, &quot;temp&quot;: 20.8},
    {&quot;city&quot;: &quot;Changsha&quot;, &quot;temp&quot;: 22.4},
    {&quot;city&quot;: &quot;Chongqing&quot;, &quot;temp&quot;: 22.8},
    {&quot;city&quot;: &quot;Guangzhou&quot;, &quot;temp&quot;: 25.1},
    {&quot;city&quot;: &quot;Shanghai&quot;, &quot;temp&quot;: 20.3},
    {&quot;city&quot;: &quot;HongKong&quot;, &quot;temp&quot;: 25.9}]


# # 方法1：循环添加
res1 = []
for item in data:
    # 复制字典，避免在原字典上修改
    new_item = item.copy()
    new_item['temp'] = item['temp'] * 9 / 5 + 32
    res1.append(new_item)

for item in res1:
    print(item)


# 方法2：列表表达式
def c_to_f(t):
    new_t = t.copy()
    new_t['temp'] = t['temp'] * 9 / 5 + 32
    return new_t


res2 = [c_to_f(n) for n in data]
for item in res2:
    print(item)

# 方法3：函数式编程
# 第一步：创建管道函数
def c_to_f(t):
    new_t = t.copy()
    new_t['temp'] = t['temp'] * 9 / 5 + 32
    return new_t


# 第二步：将数据输入管道
res3 = map(c_to_f, data)
res3 = list(res3)
for item in res3:
    print(item)

</code></pre>
<p><strong>点评</strong>：理解函数式编程后，寻找bug的时候会方便很多</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[《如何学习》阅读笔记]]></title>
        <id>https://youlianning.github.io/post/lesslessru-he-xue-xi-greatergreater-yue-du-bi-ji/</id>
        <link href="https://youlianning.github.io/post/lesslessru-he-xue-xi-greatergreater-yue-du-bi-ji/">
        </link>
        <updated>2022-06-02T09:05:07.000Z</updated>
        <content type="html"><![CDATA[<p><strong>第一步：正确认识我们的大脑</strong></p>
<ol>
<li>
<p>大脑是个综合系统，有的地方负责加工，有的地方负责存储，没有细节会彻底丢失，只是每次提取的轨迹会有不同，内容也会被大脑自行加工一部分。我们的记忆会改变我们的记忆。</p>
</li>
<li>
<p>遗忘的作用是在大脑接受大量信息后主动对噪音进行第一次筛选，信息通过遗忘后再提取能增强记忆效果，遗忘能带来创新。</p>
</li>
<li>
<p>记忆应该分为两部分，存储能力和提取能力，存储能力不会变弱，需要锻炼提取能力。</p>
</li>
<li>
<p>我们在提取某项记忆的时候越是大费力气，那么在得到之后，该项记忆的提取能力以及储存能力就飙升得越高，也就是学得越扎实。</p>
</li>
</ol>
<p><strong>第二步：如何增强记忆</strong></p>
<ol>
<li>
<p><code>环境方面</code></p>
<p>学习的时候我们是什么感觉、在哪里学、在什么地方学等，以及人的情绪状况、专注程度、直觉感触等，都会对考试成绩产生影响。</p>
<blockquote>
<p>这一发现说明，大脑处于适度亢奋状态也好，非亢奋状态也罢，其储存进去的单词数量是大致相同的：总之都装进去了。但是，在后来提取记忆信息的时候，大脑一定以不同的方式重组了这些信息。那把大脑里面的“提取钥匙”需在大脑处于与之前的状态相同时才会显得最清晰，无论是嗑了药还是清醒着。不过，一旦考卷上直接标出了“类别”提示，那把钥匙就显得多余了，因为已经有一把“外来钥匙”放在了眼前。</p>
</blockquote>
<p>当我们提取记忆时，跟输入记忆时处于同样或者相似的环境，有助于我们提取记忆。但是这样的条件比较难达到。此时环境的作用，就相当于提示。内在提示和外在提示的确可以是相当有用的记忆提示，但在真正强有力的提醒面前，就都显得苍白无力了。</p>
<p>所以，解决的方案时更换学习环境，环境背景的变换能大大提高了记忆力。因为这意味着我们用多种环境路径存储同样的信息，增强了我们在不同条件下唤起记忆的能力。</p>
</li>
<li>
<p><code>化整为零</code></p>
<p>同样的重复次数，若恰当地分成几组、拉开时间距离来完成，要比集中起来一次完成的效果明显好很多。</p>
<table>
<thead>
<tr>
<th>待考时间</th>
<th>两次学习间隔时间</th>
</tr>
</thead>
<tbody>
<tr>
<td>一星期</td>
<td>1~2天</td>
</tr>
<tr>
<td>1个月</td>
<td>1星期</td>
</tr>
<tr>
<td>3个月</td>
<td>2星期</td>
</tr>
<tr>
<td>6个月</td>
<td>3星期</td>
</tr>
<tr>
<td>1年</td>
<td>1个月</td>
</tr>
</tbody>
</table>
</li>
<li>
<p><code>通过刺激来强化学习</code></p>
<p>主动的回想比被动的重复效果要更好。也就是说，以背诵为例，学到差不多的时候最好先放一放，然后尽量用心去回想刚才的内容，这样的学习效果比直接再看书要更好。如果你想背书，最快途径是这么做：先花1/3的时间去学去记，剩下的时间则要用来凭记忆背诵</p>
<p>考试的确是一个很有效的学习方法，还让我们看到，更有效果的做法是早早考试，而不是延后考试，“考试”会“污染”了“遗忘”。所以平时说把作业当考试是很有帮助的方法。</p>
<p>同时，跟直接学习相比，预考更容易把知识“赶进”脑子里去。这样可以强化自己对这一章节学习的侧重点。</p>
<p>对着自己也好，对着他人也罢，把你学过的东西表述出来，这种简单的做法并非仅是传统意义上的一种“自考”方式，它更是一种“学习”的方式，一种更高效的学习方式。</p>
</li>
</ol>
<p><strong>第三步：如何解决难题</strong></p>
<ol>
<li>
<p><code>留出孵化时间</code></p>
<p>先把难题放到一边的作用就是让你放下刚才自己已经想过的所有思路，让大脑里的意识不再指手画脚，从而给潜意识一个自己去琢磨的机会。在孵化期中，大脑对周围任何可能与解决问题相关联的信息都很敏感。我们过去的思路的限制导致我们面对许多问题时的觉察力大打折扣。此时可以休息，换个东西看看。过一会再回来。但是如果人并没有到真正黔驴技穷的地步就跑去休息，则不会得到任何好处。早早收工跑去打游戏的话，你只会得不偿失。</p>
</li>
<li>
<p><code>渗透，让大脑主动从环境中获取信息</code></p>
<p>第一种预设是，一旦着手某项工作之后，你就在心理上给那项工作添加了一个“要完成它”的砝码，哪怕根本就不是什么要紧的事情。第二种预设是，在你全神贯注于工作时，他人对你的打扰不但会延长这项工作在你记忆中驻留的时间，而且还会让你在心理上把这项工作提高到“需要先去完成”的首要位置上。实验结果表明，人的基本需求和动力会提高自身感知力对周围能满足这些需求的相关事物的敏感度。</p>
<p>渗滤的第一要素，就是一直被我们当作学习敌人的东西：打断。</p>
<p>一旦某个目标被“激活”，它便能盖过其他一切，调动起我们的感知、思维甚至是心态，去关注身边的一切。这便是渗滤的第二要素。</p>
<p>渗滤的第三个要素，就是有意识的反思。所谓渗滤，其关键就在于一直保持着心神的警觉，不断想办法调动起我们的头脑来，关注跟手中那份未完成项目相关联的一切，随时采集各种对外界的感知，并感悟自己内心的反思。</p>
</li>
<li>
<p><code>交叉学习，提高大脑灵活性</code></p>
<p>对单一而重复的集中训练的搅扰，使得受训者不得不一再做出调整，结果反而培养出了总体上的灵活应变能力，更由此提高了某项特定动作的准确度。从最浅层来看，在训练中系统地穿插些额外的，至少也是不同的活动或题材，看上去似乎是降低了学习成效，但实际上这样的交替训练却能培养出更扎实、水平更高的能力。学习时把不同的物件、技巧、概念等穿插到一起来练习，经过一段时间的积累之后，不但能使我们更清楚地了解每一项之间的不同之处，还能使我们更彻底地掌握好每一项内容。但最为困难的地方却在于我们不肯放弃对简单重复的固有信奉。他的学生们不需要记住更多的东西，他们的弱点在于不善于鉴别不同类型的问题，也不善于选择恰当的解题方案。那时他还没有听说过“交替学习”这一专业术语，但是把不同题型混合到一起听上去像是能解决这一弱点的正确方向。不过最关键的地方在于，你在设计自己的交替学习方案时，一定要把新的科目或技巧跟学过、练过，但已经有一段时间没有复习了的内容混合到一起。</p>
<p>学习本就应该是在不断的分心中进行的活动，不仅在学习过程中你的心神会不断跳跃，而且你学习的内容也应该多样化，这样你才能获得把新旧内容混合到一起学习的超值效果。</p>
</li>
</ol>
<p><strong>第四步：深入我们的潜意识</strong></p>
<ol>
<li>
<p><code>知觉学习，强化整体感</code></p>
<p>知觉学习并不是任信息自动注入的被动过程，而是有意吸纳信息的主动过程。这是一种更高层次的学习，能够让你超出细节本身，看到整体局势的内涵信息。知觉学习模块的目的在于提高判断的准确度和速度，也就是提高感知能力，让你只须扫上一眼就“知道”自己看到了什么，连解释都不需要，至少不是当下需要。常见的训练方法，你只管快速浏览一大堆的例子，其他的便交给你大脑的知觉区去处理就行了。</p>
</li>
<li>
<p><code>通过睡觉增强学习效果</code></p>
<p>最新研究表明，在失去意识的停机状态中，大脑实际上是在澄清记忆、深化技能——睡眠是完成这两项任务必不可少的步骤。换句话说，从本质上讲，睡觉就是学习。所以为了学习而去熬夜是得不偿失的。</p>
</li>
</ol>
<p>正确认识学习，<strong>学习，归根结底就是你做的每一件事。</strong></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LaTex下载与安装]]></title>
        <id>https://youlianning.github.io/post/latex-xia-zai-yu-an-zhuang/</id>
        <link href="https://youlianning.github.io/post/latex-xia-zai-yu-an-zhuang/">
        </link>
        <updated>2022-04-18T06:18:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="下载">下载</h2>
<p>打开下载<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">清华源下载地址</a></p>
<p>选择<code>texlive.iso</code>并下载</p>
<h2 id="安装">安装</h2>
<p>下载好后，解压缩，安装，有人推荐建议安装在C盘，因为关于LaTex的很多插件会去默认的地址里找文件，但是由于我嫌弃它太大了，所以换了安装路径，各位请自便。</p>
<p>安装好后，打开vscode，安装<code>LaTeX Workshop</code>这个插件</p>
<p>打开vscode的setting.json文件，正确拷贝如下内容进行配置</p>
<pre><code class="language-json">    //latex配置[开始]
    &quot;latex-workshop.latex.tools&quot;: [
        {
            &quot;name&quot;: &quot;latexmk&quot;,
            &quot;command&quot;: &quot;latexmk&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;-pdf&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatex&quot;,
            &quot;command&quot;: &quot;xelatex&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatexArg&quot;,
            &quot;command&quot;: &quot;xelatex&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;-shell-escape&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;pdflatex&quot;,
            &quot;command&quot;: &quot;pdflatex&quot;,
            &quot;args&quot;: [
                &quot;-synctex=1&quot;,
                &quot;-interaction=nonstopmode&quot;,
                &quot;-file-line-error&quot;,
                &quot;%DOC%&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;bibtex&quot;,
            &quot;command&quot;: &quot;bibtex&quot;,
            &quot;args&quot;: [
                &quot;%DOCFILE%&quot;
            ]
        }
    ],
    &quot;latex-workshop.latex.recipes&quot;: [
        {
            &quot;name&quot;: &quot;xelatex&quot;,
            &quot;tools&quot;: [
                &quot;xelatex&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatexWithArg&quot;,
            &quot;tools&quot;: [
                &quot;xelatexArg&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;latexmk&quot;,
            &quot;tools&quot;: [
                &quot;latexmk&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;pdflatex -&gt; bibtex -&gt; pdflatex*2&quot;,
            &quot;tools&quot;: [
                &quot;pdflatex&quot;,
                &quot;bibtex&quot;,
                &quot;pdflatex&quot;,
                &quot;pdflatex&quot;
            ]
        },
        {
            &quot;name&quot;: &quot;xelatex-&gt;bibtex-&gt;xelatex-&gt;xelatex&quot;,
            &quot;tools&quot;: [
                &quot;xelatex&quot;,
                &quot;bibtex&quot;,
                &quot;xelatex&quot;,
                &quot;xelatex&quot;,
            ]
        },
        {
            &quot;name&quot;: &quot;xelatexArg-&gt;bibtex-&gt;xelatexArg-&gt;xelatexArg&quot;,
            &quot;tools&quot;: [
                &quot;xelatexArg&quot;,
                &quot;bibtex&quot;,
                &quot;xelatexArg&quot;,
            ]
        }
    ],
    &quot;latex-workshop.view.pdf.viewer&quot;: &quot;browser&quot;,
    &quot;latex-workshop.latex.clean.fileTypes&quot;: [
        &quot;*.aux&quot;,
        &quot;*.bbl&quot;,
        &quot;*.blg&quot;,
        &quot;*.idx&quot;,
        &quot;*.ind&quot;,
        &quot;*.lof&quot;,
        &quot;*.lot&quot;,
        &quot;*.out&quot;,
        &quot;*.toc&quot;,
        &quot;*.acn&quot;,
        &quot;*.acr&quot;,
        &quot;*.alg&quot;,
        &quot;*.glg&quot;,
        &quot;*.glo&quot;,
        &quot;*.gls&quot;,
        &quot;*.ist&quot;,
        &quot;*.fls&quot;,
        &quot;*.log&quot;,
        &quot;*.fdb_latexmk&quot;
    ],
    //下面这段是语法检查模块
    //{
    &quot;ltex.enabled&quot;: true,
    &quot;[jsonc]&quot;: {
        &quot;editor.defaultFormatter&quot;: &quot;vscode.json-language-features&quot;
    },
    &quot;latex-workshop.latex.recipe.default&quot;: &quot;lastUsed&quot;,
    &quot;latex-workshop.view.outline.sections&quot;: [
        &quot;part&quot;,
        &quot;chapter&quot;,
        &quot;Csection&quot;,
        &quot;section&quot;,
        &quot;subsection&quot;,
        &quot;subsubsection&quot;,
        
    ],
    &quot;editor.wordWrap&quot;: &quot;on&quot;,
    &quot;workbench.editorAssociations&quot;: {
        &quot;*.ipynb&quot;: &quot;jupyter-notebook&quot;
    },
    &quot;latex-workshop.latex.autoBuild.run&quot;: &quot;never&quot;,
    &quot;editor.accessibilitySupport&quot;: &quot;off&quot;,
    &quot;pyqt-integration.qtdesigner.path&quot;: &quot;/Applications/Qt Designer.app/Contents/MacOS/Designer&quot;,
    &quot;editor.suggestSelection&quot;: &quot;first&quot;,
    &quot;vsintellicode.modify.editor.suggestSelection&quot;: &quot;automaticallyOverrodeDefaultValue&quot;,
    &quot;lsby_gitee_vscode_plugin.personal_access_tokens&quot;: &quot;096eca87ccee46e0c0cdcb826b816cb3&quot;,
    &quot;latex-workshop.intellisense.bibtexJSON.replace&quot;: {
    
    }
    //latex配置[结束]
</code></pre>
<p>然后就可以正常使用了，关于其它一些配置，可以参考如下链接：<a href="https://zhuanlan.zhihu.com/p/350249305">latex---vscode编辑器配置及快捷键</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[LaTex基本语法（自用笔记）]]></title>
        <id>https://youlianning.github.io/post/latex-ji-ben-yu-fa-zi-yong-bi-ji/</id>
        <link href="https://youlianning.github.io/post/latex-ji-ben-yu-fa-zi-yong-bi-ji/">
        </link>
        <updated>2022-04-18T06:16:47.000Z</updated>
        <content type="html"><![CDATA[<h2 id="基本格式">基本格式</h2>
<pre><code class="language-latex">\documentclass[UTF8]{ctexart}
% 本行添加修饰用的其它包
\begin{document}
hello,world
\section{中英文内容}
Here is the English part.
\subsection{中文部分}
这里是中文。
\end{document}
</code></pre>
<h2 id="段落-换行-换页">段落、换行、换页</h2>
<pre><code class="language-latex">\section{中英文内容}
Here is the English part.
Here is the English part. % 一个回车是不是换段落

Here is the English part. % 两个回车是换段落
Here is the English part. \\ Here is the English part. % 双斜杠是换新行并置顶格

\newpage % 新建一页
</code></pre>
<h2 id="章节">章节</h2>
<p>在论文里往往需要小标题</p>
<pre><code class="language-latex">\tableofcontents % 自动生成目录，可能需要编译两次才能看见
\listoffigures % 自动生成图片目录
\listoftables % 自动生成表格目录

\section{一级标题}
\subsection{二级标题}
\subsubsection{三级标题}
\paragraph{四级标题} % 不推荐使用四级标题，它不会新生成段落，除非修改自定义

\section*{附录} % 不带序号的一级标题，但是无序号可能无法自动添加进目录
\addcontentsline{toc}{section}{附录} % 通过这种手动添加方式添加附录等

</code></pre>
<h2 id="有序列表和无序列表">有序列表和无序列表</h2>
<pre><code class="language-latex">% 有序列表
\begin{enumerate}
    \item aaa
    \item bbb
\end{enumerate}
% 无序列表
\begin{itemize}
    \item aaa
    \item bbb
\end{itemize}
</code></pre>
<h2 id="代码环境">代码环境</h2>
<pre><code class="language-latex">\section{中英文内容}
Here is the English \verb|Python| part. % 此处插入了代码或者等宽字体片段

% 插入一大段代码
% 如果想要优化代码展示，可以搜索资料，装饰它
\begin{verbatim}
	printf('hello world');
\end{verbatim}
</code></pre>
<h2 id="插图和表格">插图和表格</h2>
<pre><code class="language-latex">\documentclass[UTF8]{ctexart}
\usepackage{graphicx}
...
Here is the English \ref{img:lena}part. % 需要编译两次
\begin{figure}[]
    \centering
    \includegraphics[width=0.35\textwidth]{lena.png} % 文件路径名
    \caption{lena图像} % 图像名
    \label{img:lena} % 图像标签，img只是提醒自己，不是强制要求
\end{figure}

% 论文中尽量用矢量图，不要用位图
% xelatex支持pdf, eps两种矢量图
% word支持svg矢量图

% 表格演示，实际上表格可以不用手打，使用下列网页自动生成后复制粘贴
% https://www.tablesgenerator.com/

\begin{table}[]
\begin{tabular}{llll}
  &amp; 姓名 &amp; 成绩 &amp; 合格 \\
1 &amp; a  &amp; 90 &amp; 1  \\
2 &amp; b  &amp; 85 &amp; 1  \\
3 &amp; c  &amp; 55 &amp; 0 
\end{tabular}
\end{table}

</code></pre>
<h2 id="公式">公式</h2>
<pre><code class="language-latex">\section{中英文内容}
Here is the English $E=mc^2$ part. % 此处插入行内公式

Here is the English $$E=mc^2$$ part. % 如果使用两个$符号，则会新建行单独显示公式，但是不会给序号

% 插入一大段公式
% 如果想要更多公式用法，可以搜索资料
\begin{equation}
    E=mc^2
    \label{equ:1}
\end{equation}
</code></pre>
<h2 id="小工具">小工具</h2>
<pre><code class="language-latex">% 这个包能够自动为你生成一大段无意义文字，来帮助你检测当前格式排版
\usepackage{lipsum}

\lipsum
</code></pre>
<h2 id="自定义cls">自定义cls</h2>
<pre><code class="language-latex">\NeedsTeXFormat{LaTeX2e}
\ProvidesClass{Book_Class}[2020/05/12]

\LoadClass[12pt]{report}

\RequirePackage{mathtools}
</code></pre>
<h2 id="语法备忘">语法备忘</h2>
<p>latex单反引号表示左双引号</p>
<h2 id="待补充">待补充</h2>
<ul>
<li>如何画矢量图</li>
<li>如何自动引用文献</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Gridea扩展(一)- 代码高亮]]></title>
        <id>https://youlianning.github.io/post/gridea-kuo-zhan-yi-dai-ma-gao-liang/</id>
        <link href="https://youlianning.github.io/post/gridea-kuo-zhan-yi-dai-ma-gao-liang/">
        </link>
        <updated>2022-04-09T13:44:07.000Z</updated>
        <content type="html"><![CDATA[<p>参考链接：<a href="https://geraltxli.github.io/post/gridea-kuo-zhan/">Gridea扩展(一)- 代码高亮 | GeraltXLi</a></p>
<blockquote>
<p>没想到Gridea默认没有代码高亮，那只能自己来了，使用<strong>highlightjs</strong>，修改一下主题里代码， 引入一下就好了。</p>
</blockquote>
<h2 id="代码高亮">代码高亮</h2>
<ol>
<li>下载<a href="https://highlightjs.org/">highlight.js</a>，点<code>Get Version</code>去下载，里面也不少各种语言等之类的选择，一般默认就够用了</li>
<li>下载完后解压，简单点就把整个文件夹<code>highlight</code>都丢到gridea数据目录的<code>static</code>目录下（不过其实也可以直接copy里面的<code>highlight.pack.js</code>和<code>styles</code>目录）</li>
<li>去数据目录下的<code>themes</code>目录下修改，一般只有文章会用到，找到想要修改的主题，直接修改<code>post.ejs</code>。在head里加几行代码就行了，这里我选了<code>github-dark</code>样式，这个看自己爱好</li>
</ol>
<pre><code class="language-javascript">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;%= themeConfig.domain %&gt;/highlight/styles/github-dark.min.css&quot;&gt;
    &lt;script src=&quot;&lt;%= themeConfig.domain %&gt;/highlight/highlight.min.js&quot;&gt;&lt;/script&gt;
    &lt;script&gt;hljs.initHighlightingOnLoad();&lt;/script&gt;
</code></pre>
<p><strong>注意：</strong> 下载下文件后，内部的文件名不一定对应的上，需要打开下载的文件，查看匹配修改一下名字，与js设置里的路径对应。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ FPGA Vitis：mipi摄像头图像VDMA传输DP口输出代码框架]]></title>
        <id>https://youlianning.github.io/post/fpga-vitismipi-she-xiang-tou-tu-xiang-vdma-chuan-shu-dp-kou-shu-chu-dai-ma-kuang-jia/</id>
        <link href="https://youlianning.github.io/post/fpga-vitismipi-she-xiang-tou-tu-xiang-vdma-chuan-shu-dp-kou-shu-chu-dai-ma-kuang-jia/">
        </link>
        <updated>2022-04-09T06:13:38.000Z</updated>
        <content type="html"><![CDATA[<pre><code class="language-c">/* ------------------------------------------------------------ */
/*				Include File Definitions						*/
/* ------------------------------------------------------------ */

#include &quot;display_demo.h&quot;
#include &lt;stdio.h&gt;
#include &quot;math.h&quot;
#include &lt;ctype.h&gt;
#include &lt;stdlib.h&gt;
#include &quot;xil_types.h&quot;
#include &quot;xil_cache.h&quot;
#include &quot;xparameters.h&quot;
#include &quot;xiicps.h&quot;
#include &quot;vdma.h&quot;
#include &quot;i2c/PS_i2c.h&quot;
#include &quot;xgpiops.h&quot;
#include &quot;sleep.h&quot;
#include &quot;dp/dp.h&quot;
#include &quot;ov5640.h&quot;
#include &quot;config.h&quot;
#include &quot;demosaic.h&quot;
#include &quot;gamma_lut.h&quot;

#if P1080 == 1
#define HORSIZE 1920*4
#define VERSIZE 1080
#else
#define HORSIZE 1280*4
#define VERSIZE 720
#endif

#define CAM_EMIO	78
/* ------------------------------------------------------------ */
/*				Global Variables								*/
/* ------------------------------------------------------------ */

/*
 * Display Driver structs
 */

XIicPs ps_i2c0;
XGpioPs Gpio;

/*
 * Framebuffers for video data
 */
u8 frameBuf[DISPLAY_NUM_FRAMES][DEMO_MAX_FRAME] __attribute__ ((aligned(256)));//字节对齐，提高读取效率
u8 *pFrames[DISPLAY_NUM_FRAMES]; //array of pointers to the frame buffers

int PsGpioSetup() ;

int main(void)
{

	int Status;
	int i ;

    //直接将cache关闭，这时不使用cache，无论是CPU还是PL都是直接更新DDR中的数据，所以不存在Cache一致性的问题。
	Xil_DCacheDisable();
	Xil_ICacheDisable();


	/*
	 * Initialize an array of pointers to the 3 frame buffers
	 */
	for (i = 0; i &lt; DISPLAY_NUM_FRAMES; i++)
	{
		pFrames[i] = frameBuf[i];
        //C 库函数 void *memset(void *str, int c, size_t n) 
        //复制字符 c（一个无符号字符）到参数 str 所指向的字符串的前 n 个字符。
        //此处用于初始化分配到的空间
		memset(pFrames[i], 0, DEMO_MAX_FRAME);
	}
	
    //初始化CAMERA引脚
	PsGpioSetup() ;
	/*
	 * Reset sensor/复位CAMERA引脚
	 */
	XGpioPs_WritePin(&amp;Gpio, CAM_EMIO, 0) ;
	usleep(1000000);
	XGpioPs_WritePin(&amp;Gpio, CAM_EMIO, 1) ;
	usleep(1000000);

	i2c_init(&amp;ps_i2c0, XPAR_XIICPS_0_DEVICE_ID,100000);

	
	/*
	 * DP dma demo
	 */
	xil_printf(&quot;DPDMA Generic Video Example Test \r\n&quot;);
	Status = DpdmaVideoExample(&amp;RunCfg, pFrames[0]);
	if (Status != XST_SUCCESS) {
		xil_printf(&quot;DPDMA Video Example Test Failed\r\n&quot;);
		return XST_FAILURE;
	}

	gamma_lut_init();
	demosaic_init();

	/* Start Sensor Vdma */
	vdma_write_init(XPAR_AXIVDMA_0_DEVICE_ID,HORSIZE,VERSIZE,DEMO_STRIDE,(unsigned int)pFrames[0]);
	
	/*
	 * Initialize Sensor
	 */
	sensor_init(&amp;ps_i2c0);

	return 0;
}


int PsGpioSetup()
{
	XGpioPs_Config *GPIO_CONFIG ;
	int Status ;

	GPIO_CONFIG = XGpioPs_LookupConfig(XPAR_XGPIOPS_0_DEVICE_ID) ;

	Status = XGpioPs_CfgInitialize(&amp;Gpio, GPIO_CONFIG, GPIO_CONFIG-&gt;BaseAddr) ;
	if (Status != XST_SUCCESS)
	{
		return XST_FAILURE ;
	}
	/* set MIO 54 as output */
	XGpioPs_SetDirectionPin(&amp;Gpio, CAM_EMIO, 1) ;

	XGpioPs_SetOutputEnablePin(&amp;Gpio, CAM_EMIO, 1);


	return XST_SUCCESS ;
}

</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Vivado HLS生成IP核报错的解决方案]]></title>
        <id>https://youlianning.github.io/post/vivado-hls-sheng-cheng-ip-he-bao-cuo-de-jie-jue-fang-an/</id>
        <link href="https://youlianning.github.io/post/vivado-hls-sheng-cheng-ip-he-bao-cuo-de-jie-jue-fang-an/">
        </link>
        <updated>2022-04-07T06:43:45.000Z</updated>
        <content type="html"><![CDATA[<p>参考链接：<a href="https://blog.csdn.net/qq_41873311/article/details/122596244">(79条消息) Vivado HLS生成IP核报错的解决方案_爱学习的诸葛铁锤的博客-CSDN博客_hls生成ip核</a></p>
]]></content>
    </entry>
</feed>